[{"title":"ascp（新版v4） 下载原始数据，真的快！！！","url":"/post/be84278b.html","content":"\n#  ascp（新版v4） 下载原始数据，真的快！！！\n\n## 原始数据下载工具速度测评\n\n对于生物信息学研究人员来说，下载 NCBI 上的原始数据是经常要碰到的事情，目前也有许多方法可以下载原始数据，例如：\n\n* NCBI官方的 SRA Toolkit 进行下载\n* wget, curl 命令直接下载\n* aspera 工具下载\n* grabseqs 工具下载\n* Kingfisher 工具下载\n* 导出链接用 IDM 工具下载\n\n但 aspera 下载是最快，而且还不需要转换，实测如下：\n\n* **IDM**\n\n\t<img src='https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/uPic/20250402_l5iXPX.png' alt='20250402_l5iXPX'/>\n\n* Kingfisher<img src='https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/uPic/20250402_tq7yyp.png' alt='20250402_tq7yyp'/>\n\n* aspera\n\n\t<img src='https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/uPic/20250402_Rpkxqz.jpg' alt='20250402_Rpkxqz'/>\n\n\t\n\n但目前 ascp 更新到了 v4 版本，安装和使用规则都发生了很大的变化……\n\n```shell\nconda search aspera-cli\n\nLoading channels: done\n# Name                       Version           Build  Channel\naspera-cli                    4.14.0      hdfd78af_1  anaconda/cloud/bioconda\naspera-cli                    4.14.0      he0b3917_0  anaconda/cloud/bioconda\naspera-cli                    4.14.0      hfafdfc2_0  anaconda/cloud/bioconda\naspera-cli                    4.19.0      hdfd78af_0  anaconda/cloud/bioconda\naspera-cli                    4.20.0      hdfd78af_0  anaconda/cloud/bioconda\n```\n\n## 安装新版ascp\n\n### 1. 利用 conda 安装 aspera-cli\n\n```bash\nconda install -y aspera-cli=4.20.0\n```\n\n### 2. 设置环境变量\n\n```bash\n# 先寻找路径\nwhich ascli\n# /path/to/your/bin/ascli\n\n# 将以上路径添加到~/.bashrc或~/.zshrc文件中\nexport PATH=$PATH:/path/to/your/bin\n```\n\n### 3. 安装 ascp \n\n新版 ascp 安装比较麻烦：\n\n```bash\n# 需要先下载sdk(https://ibm.biz/sdk_location)\nwget https://production-transfer-sdk.s3.us-west-2.amazonaws.com/1.1.2/linux-amd64-1.1.2-753f662.tar.gz\ntar -zxvf linux-amd64-1.1.2-753f662.tar.gz\n\n# 安装 ascp,注意：命令需在与linux-amd64-1.1.2-753f662.tar.gz文件同级目录下运行\nascli config ascp install --sdk-url=file:///linux-amd64-1.1.2-753f662.tar.gz\n\n# 寻找 ascp 路径\nascli config ascp show\n# /path/to/your/ascp\n\n# 如果是mac，需要下载 macos-arm64-1.1.2-753f662.zip 或者 macos-amd64-1.1.2-753f662.zip，其他步骤一致\n```\n\n### 4. 寻找密钥\n\n```shell\n# 找到秘钥，主要使用pem\nfind $HOME -name aspera_bypass_dsa.pem\n\n# 注意如果没有，也可以使用旧版本 asperaweb_id_dsa.openssh ，以下只在mac上测试是可行的\n# mac上使用本地安装了 osx-64/aspera-cli-3.9.6-hbec0bfc_0.tar.bz2\nfind /youpath -name 'asperaweb_id_dsa.openssh'\n# 一般在：/path/to/your/envs/<conda 环境名称>/pkgs/aspera-cli-3.9.6-hbec0bfc_0/etc/asperaweb_id_dsa.openssh\n\n\n\n```\n\n\n\n## 下载SRA数据\n\n### 基本命令格式\n\n```bash\nascp -QT -l 300m -P33001 -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh anonftp@ftp.ncbi.nlm.nih.gov:/sra/sra instant/reads/ByRun/sra/SRR/SRR123/SRR1234567/SRR1234567.sra .\n```\n\n参数说明：\n\n- `-QT`：禁用加密提高性能\n- `-l 300m`：限制最大传输速度为300MB/s\n- `-P33001`：指定端口号\n- `-i`：指定密钥文件\n\n### 举例\n\n1. 可以使用 EBI 下载数据，需要在 Show Column Selection 先钩选\n\t<img src='https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/uPic/20250402_qZoDMF.jpg' alt='20250402_qZoDMF'/>\n\n2. 然后复制 Aspera 连接，利用 aspc 命令下载\n\t<img src='https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/uPic/20250402_TrAQ5E.jpg' alt='20250402_TrAQ5E'/>\n\n\n## 常见问题及解决\n\n1. **问题**：出现\"Permission denied\"错误  \n\t**解决**：检查密钥文件路径是否正确，权限是否合适（chmod 600）\n\n2. **问题**：速度不如预期  \n\t**解决**：调整-l参数值，以适应您的网络带宽\n\n3. **问题**：连接频繁断开  \n\t**解决**：添加-k2参数，增强连接稳定性\n\n","tags":["tool"],"categories":["tool"]},{"title":"AI助手：Cherry Studio","url":"/post/2b776728.html","content":"\n## AI助手：Cherry Studio\n### 一、 简单介绍\nCherry Studio 是一款功能强大的多模型服务桌面客户端，专为专业用户打造的AI助手应用。它支持在 Windows、macOS 和 Linux 平台上运行，提供了丰富的大语言模型支持和行业智能助手，旨在帮助用户显著提升工作和学习效率。作为一款完全开源且免费的软件，Cherry Studio 内置了 30 多个行业的智能助手，能够在多种场景下为用户提供专业的AI支持。\n\n### 二、 下载方式\n获取 Cherry Studio 非常简单，您可以通过以下途径下载安装：\n* 官方网站：访问 [Cherry Studio](https://cherry-ai.com/) 官网 下载最新版本\n* GitHub：访问 [GitHub Releases](https://github.com/CherryHQ/cherry-studio/releases) 页面获取不同版本\n\n\n### 三、 主要特点\n##### 多模型支持\n* 云服务模型：支持 OpenAI、Gemini、Anthropic、DeepSeek 等主流大型语言模型云服务\n* 本地模型：支持 Ollama AI 等本地模型部署，满足隐私需求\n* 嵌入模型：利用先进的嵌入模型增强文本理解和生成能力\n<p align = \"center\">\n<img src='https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/uPic/20250226_rPHWdH.jpg' alt='20250226_rPHWdH' width = \"65%\"/>\n</p>\n\n##### 预配置的专业助手\n* 内置30多个行业的智能助手，覆盖多种专业领域\n* 针对不同场景优化的提示词模板，提高AI对话效率\n* 专业领域特定功能支持，满足各行各业需求\n<p align = \"center\">\n<img src='https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/uPic/20250226_NnYEx3.jpg' alt='20250226_NnYEx3' width = \"65%\"/>\n</p>\n\n##### 完全开源与免费\n* 开源代码，社区驱动发展\n* 免费使用，无需担心额外费用（仅需配置相应模型的API密钥）\n<p align = \"center\">\n<img src='https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/uPic/20250226_zG0tlE.png' alt='20250226_zG0tlE' width = \"65%\" />\n</p>\n\n##### 文生图功能\n* 支持多种图像生成模型\n* 灵活的图像风格和参数调整\n<p align = \"center\">\n<img src='https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/uPic/20250226_gVfZIR.jpg' alt='20250226_gVfZIR' width = \"65%\"/>\n</p>\n\n##### 用户友好界面\n* 简洁直观的操作界面\n* 多样化的定制选项\n* 对话历史保存与管理功能\n\n### 四、 实际体验\n\n##### 在线模型设置\n在Cherry Studio中，可以填入自己常用的大语言模型API，点击设置，填入API密钥与API地址就可以。\n<p align = \"center\">\n<img src='https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/uPic/20250226_uKwJI9.jpg' alt='20250226_uKwJI9' width = \"65%\"/>\n</p>\n\n##### 本地模型Ollama设置\n点击设置，选择Ollama配置本地模型即可。\n<p align = \"center\">\n<img src='https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/uPic/20250226_0UvNQW.jpg' alt='20250226_0UvNQW' width = \"65%\"/>\n</p>\n\n### 五、总结\nCherry Studio 作为一款支持多模型的桌面AI客户端，以其全面的功能、专业的定位和优秀的用户体验，成为提升工作效率的理想选择。无论是开发者、内容创作者还是各行业专业人士，都能在Cherry Studio中找到合适的AI助手来辅助日常工作。\n\n它的开源免费特性更是为用户提供了灵活的使用可能性，而持续的社区更新则保证了软件的不断进步。如果你正在寻找一款功能强大、操作便捷的AI桌面客户端，Cherry Studio绝对值得一试。\n\n","tags":["tool"],"categories":["tool"]},{"title":"汉诺塔的递归算法","url":"/post/6b81e5a1.html","content":"\n### 一、 起源\n\n&emsp;&emsp;传说越南河内某间寺院有三根银棒，上串 64 个金盘。寺院里的僧侣依照一个古老的预言，以上述规则移动这些盘子；预言说当这些盘子移动完毕，世界就会灭亡。这个传说叫做梵天寺之塔问题（Tower of Brahma puzzle）。但不知道是卢卡斯自创的这个传说，还是他受他人启发。\n\n### 二、 移动规则\n\n<img src='https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/uPic/20241217_r6H7Rh.png' alt='20241217_r6H7Rh' style=\"zoom:160%\" align=center />\n\n&emsp;&emsp;1.每次只能移动一个盘子；\n\n&emsp;&emsp;2.大盘不能放在小盘上面；\n\n&emsp;&emsp;3.在三根柱子之间一次只能移动一个盘子。\n\n### 三、 问题抽象\n\n&emsp;&emsp;**我们要利用抽象思维去思考汉诺塔这个问题，把 A 柱上的盘子看成两份，就是上面的盘子（可能是一个或者多个）和最底下的盘子，不需要关心上面的盘子到底有几个，每次操作就是把最底下的盘子通过缓冲区 B 柱移动到 C 柱。**\n\n&emsp;&emsp;举例：从左到右有 A、B、C 三根柱子，其中 A 柱子上面有从小叠到大的 n 个圆盘，现要求将 A 柱子上的圆盘移到 C 柱子上去，期间只有一个原则：一次只能移到一个盘子且大盘子不能在小盘子上面，求移动的步骤和移动的次数。\n\n* n == 1 ( sum = 1 次 )\n\n  * 第1次 1号盘 A ----> C \n<br/>\n\n* n == 2 ( sum = 3 次 )\n\n  * 第1次 1号盘 A ----> B\n  * 第2次 2号盘 A ----> C\n  * 第3次 1号盘 B ----> C\n<br/>\n\n* n == 3 ( sum = 7 次 )\n\n  * 第1次 1号盘 A ----> C\n  * 第2次 2号盘 A ----> B\n  * 第3次 1号盘 C ----> B\n  * 第4次 3号盘 A ----> C\n  * 第5次 1号盘 B ----> A\n  * 第6次 2号盘 B ----> C\n  * 第7次 1号盘 A ----> C\n\n规律如下：\n&emsp;&emsp;1个圆盘的次数 2的1次方减1\n&emsp;&emsp;2个圆盘的次数 2的2次方减1\n&emsp;&emsp;3个圆盘的次数 2的3次方减1\n&emsp;&emsp;…………………………\n&emsp;&emsp;**n个圆盘移动次数为：2^n - 1**\n\n### 四、 算法分析（递归算法）\n\n&emsp;&emsp;到目前为止，求解汉诺塔问题最简单的算法还是通过递归方式，递归简单而言就是某个方法或函数，但是在这个函数里有调用自己这个函数的语句，在调用到某一次后函数能返回一个确定的值，接着倒数第二个就能返回一个确定的值，一直到第一次调用的这个函数能返回一个确定的值，也就是最初需要有一个确定的值作为递归结束的条件。\n\n&emsp;&emsp;实现这个算法可以简单分为三个步骤：\n&emsp;&emsp;&emsp;&emsp;1. 把n-1个盘子由 A 移到 B；\n&emsp;&emsp;&emsp;&emsp;2. 把第n个盘子由 A 移到 C；\n&emsp;&emsp;&emsp;&emsp;3. 把n-1个盘子由 B 移到 C；\n\n### 五、 代码实现\n\n```python\ndef hanoi(n, a, b, c):\n    if n == 1:\n        print(f\"Move disk 1 from {a} to {c}\")\n        return\n    hanoi(n-1, a, c, b)\n    print(f\"Move disk {n} from {a} to {c}\")\n    hanoi(n-1, b, a, c)\n```\n```python\nhanoi(3, 'A', 'B', 'C')\n```\n\n输出结果：\n```\nMove disk 1 from A to C\nMove disk 2 from A to B\nMove disk 1 from C to B\nMove disk 3 from A to C\nMove disk 1 from B to A\nMove disk 2 from B to C\nMove disk 1 from A to C\n```\n代码中的移动流程解释\n```python\n/**\n  3个盘子的汉诺塔全部通过代码演示，按缩进原则，每一个缩进即进一个递归函数，每打印一次即中止当前递归,也就是每个print\n说明:\n    1.n = 3, n = 2, n = 1是每次执行if(n == 1)的结果，这里就不写判断了，相信大家也能看懂，也就是n不等与1时就减1进入递归\n    2.请注意a,b,c柱每次进入函数的顺序，不要被形参带错路了，看准每次函数参数的实参 \n**/\n\nmove(3, \"a\", \"b\", \"c\")\nn=3:\n    //开始从a上移动n-1即2个盘子通过c移动到b,以腾出c供a最后一个盘子移动\n    move(2, \"a\",\"c\",\"b\")\n    n=2:\n    //开始进行n=2的一个递归，把当前a('a')柱上的n-1个盘子通过c('b'）移动到b('c')\n        move(1, \"a\", \"b\", \"c\")\n        n=1:\n        //n=2的第一个递归完成,打印结果，执行当前子函数剩余代码\n            print(\"a\", \"->\", \"c\") \n        move(1, \"a\", \"c\", \"b\")\n        n=1:\n            print(\"a\", \"->\", \"b\")\n        move(1, \"c\", \"a\", \"b\")\n        n=1:\n            print(\"c\", \"->\", \"b\")\n    　   //到这里完成了a柱上面的n-1即是2个盘子的移动\n        //开始把a柱上最后一个盘子移动到c柱上\n        move(1, \"a\", \"b\", \"c\")\n        n=1:\n            print(\"a\", \"->\", \"c\")\n    //到这里完成移动a柱上的最后一个盘子到c柱上 \nmove(2, \"b\", \"a\", \"c\")\nn=2:\n//开始进行n=2的第二个递归,即把当前b('b')的盘子(n-1个)通过a('a')移动到c('c')上\n    move(1, \"b\", \"c\", \"a\")\n    n=1:\n    //n=2 的第二个递归完成，打印结果并执行当前子函数的剩余代码\n        print(\"b\", \"->\", \"a\")\n    move(1, \"b\", \"a\", \"c\")\n    n=1:\n        print(\"b\", \"->\", \"c\")\n    move(1, \"a\", \"b\", \"c\")\n    n=1:\n        print(\"a\", \"->\", \"c\")\n        //到这里把b上的盘子通过a移动到c,\n//整个代码执行完毕,汉诺塔移动完成\n```\n\n### 六、 总结\n\n&emsp;&emsp;在学习 python 的时候看到这个汉诺塔问题，被其简洁优雅的代码所震撼，利用递归的方式简单的解决，也让我有了更深入了解算法魅力的想法，感觉算法本质上是在利用数学抽象的方法解决问题，问题就像山顶的旗帜，不同的算法通过不同的路径爬山，有的快有的慢（时间复杂度），有的简单有的复杂（空间复杂度），但是都能到达山顶，这就是算法的魅力所在。<br/>\n\n\n### 七、 参考资料\n* [python实现汉诺塔的图解递归算法](https://www.cnblogs.com/youqiancheng/p/14344709.html)\n* [递归经典案例汉诺塔 python实现](https://blog.csdn.net/hikobe8/article/details/50479669)\n\n","tags":["algorithm"],"categories":["algorithm"]},{"title":"有意思的图片","url":"/post/fa92398f.html","content":"\n## 有意思的图片\n\n> 注：此文所有图片引用自“熊言熊语”博主：[主页](https://kaopubear.top/)\n\n1. 学习流程\n\n    ![image](https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/45BE6-APSzoV-20231218.png)\n\n    <!--more-->\t\n\n    ​\t博主的整个学习流程大概分为5个步骤：收集各种各样的信息，利用自己的标准（例如：兴趣与专业等）对信息进行筛选，接下来对感兴趣的信息进一步扩展以及深入学习，最后将知识整理进自己的系统内，并通过多种渠道进行输出。\n\n    ​\t这个流程引发我的一些思考，本科也曾经构建了一个自己的“黑白洞学习理论”，但还不完善。\n\n    * 黑洞（输入）：\n\n        * 结构\n            * 表层：碎片化阅读吸收的信息\n            * 中层：从表层提炼的、深度阅读、专业学习\n            * 底层：系统性的知识，内在的关联逻辑\n        * 执行\n            * 道：计划、总结、反思......\n            * 术：每日规划表、番茄钟、脑图......\n\n    * 白洞（输出）\n\n        * 结构\n            * 表层：易于理解与阅读的信息\n            * 中层：信息内部的逻辑\n            * 底层：思维方式、价值观念\n        * 执行\n            * 道：逻辑自洽......\n            * 术：笔记、博客......\n\n        博主的流程可以提供一些具体化的路线以及步骤，接下来继续完善自己的学习理论并执行。\n\n        图片来源：[把飞书融入日常学习流程](https://kaopubear.notion.site/8e9e9699333e4c41980c5d2b146ff486)\n\n2. 知识的提炼\n\n    <img src=\"https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/4btae-ZknVes-20231218.png\" alt=\"202212151633618\" style=\"zoom: 50%;\" />\n\n    ​\t知识的串联过程：数据中的包含了许多各种各样的“信息”，存在价值的“信息”才是真正的信息，信息转化成知识是需要先验知识的串联，形成比较完整的有逻辑的信息链，而新见解就是在信息链上之前不存在的一些信息，最后经历过时间的考验，某些信息链就成为了大家的智慧，带来新的影响\n\n    ​\t图片来源：[从2002年的Nature论文到2022年的亿元营收](https://kaopubear.top/blog/2022-12-15-mammaprint-intro-from-nature-to-product/)\n\n3. 项目做与讲的方式\n\n    <img src=\"https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/4fVAq-HcFuEB-20231218.png\" alt=\"faab6afe-3be1-4bf5-b704-4b232bd0289c\" style=\"zoom:67%;\" />\n\n    ​\t做项目的过程应该像是一个灯泡，来源于一个有趣的观察，中间进行大量的尝试，最后一个具体的特殊的发现。\n\n    ​\t讲项目的过程应该像是一个沙漏，背景要尽可能的详实，精炼的发现只占中间一小部分，在领域内的意义和应用也要丰富。\n\n4. 待续......\n\n","tags":["knowledge","essay"],"categories":["notes","essay"]},{"title":"AI 提示词","url":"/post/fffa6250.html","content":"\n#### Prompt\n你是一位科研论文审稿员，擅长写作高质量的英文科研论文。请你帮我准确且学术性地将以下中文翻译成英文，风格与英文科研论文保持一致。\n分三步进行翻译工作，并打印每步的结果：\n1. 根据中文内容直译成英文，保持原有格式，不要遗漏任何信息\n2. 根据第一步直译的结果，指出其中存在的具体问题，要准确描述，不宜笼统的表示，也不需要增加原文不存在的内容或格式，包括不仅限于：\n    - 不符合英文表达习惯，明确指出不符合的地方\n    - 语句不通顺，指出位置，不需要给出修改意见，意译时修复\n    - 晦涩难懂，模棱两可，不易理解，可以尝试给出解释\n3. 根据第一步直译的结果和第二步指出的问题，重新进行意译，保证内容的原意的基础上，使其更易于理解，更符合英文科研论文的表达习惯，同时保持原有的格式不变。-输入格式为Markdown格式，输出格式也必须保留原始Markdown格式。这条仅需要回答是否OK,接下来我将给你原文。\n\n","tags":["tool"],"categories":["tool"]},{"title":"如何通俗地理解Family-wise error rate(FWER)和False discovery rate(FDR)","url":"/post/c61694ea.html","content":"\n> 本文转载于网络， 原文地址：[如何通俗地理解Family-wise error rate(FWER)和False discovery rate(FDR)](https://blog.csdn.net/shengchaohua163/article/details/86738462)\n\n### 如何通俗地理解Family-wise error rate(FWER)和False discovery rate(FDR)\n\nFamily-wise error rate (FWER)，暂时还不了解比较通俗易懂的翻译。False discovery rate(FDR)，一般翻译为错误发现率。在研究使用假设检验解决机器学习中的分类问题时，我遇到了多重假设检验问题。FWER 和 FDR 正是解决这一问题的两种方法。经过老师和师兄师姐的指导，我能够将 FDR 应用于自己的问题当中，并且实验结果也有所改善。但是，应用之后，我仍然存在一些困惑，比如 FWER 和 FDR 到底是什么，FWER 和 FDR 怎么计算，为什么 FWER 和 FDR 能够降低错误率以及如何通俗地理解二者。\n\n为了搞清楚上述问题，我仔细研究了维基百科和网络上的一些资料，认为通俗地理解 FWER 和 FDR 不是一件容易的事。研究者首先需要有一定的统计学假设检验的基础，而且还能够将 FWER 和 FDR 应用于实际的问题。所以，我会从假设检验谈起，然后结合自己的问题进行探讨。\n\n#### 假设检验\n\n假设检验是用于检验统计假设的一种方法。它的基本思想是小概率思想，小概率思想是指小概率事件在一次试验中基本上不会发生。\n\n假设检验的基本方法是提出一个空假设（null hypothesis），也叫做原假设，记作 $H_0$​；然后得出感兴趣的备择假设（alternative hypothesis），记作 $H_1$​ 或 $H_A$​。空假设和备择假设的指导原则是空假设是不感兴趣对研究不重要的结论，而备择假设是我们感兴趣想要证明的结论。举个例子，给定人的一些身体指标数据，判断其是否存在某种疾病（比如肺炎）。\n\n $H_0$​：某人没病（我们不感兴趣）； $H_1$​​：某人有病（我们感兴趣）。将这些身体指标数据和已确定的或健康或有病的一些人的身体数据等样本信息比较，计算 p 值，一般指定显著性水平 α = 0.05 ，如果 p 值小于 0.05，表示这是一个小概率事件。根据小概率思想，我们与其相信这个小概率事件的发生，不如认为更为合理的选择是拒绝原假设，认为该人有病；否则无法拒绝原假设，即接受原假设，表示没有足够的证据认为该人有病。\n\n注：  \n\n1. 统计显著性：空假设为真的情况下拒绝零假设所要承担的风险水平，又叫概率水平。  \n2. p 值：假定空假设为真的情况下，得到相同样本结果或更极端结果的概率，是一个用来衡量统计显著性的重要指标。  \n3. 显著性水平 α ：空假设为真时，错误地拒绝空假设的概率。另外，也可以把这种概率理解成在假设检验中决策所面临的风险。  \n4. 比起计算 p 值，也可以计算统计量，根据显著性水平判断统计量是否落入拒绝域，进而决定是否拒绝原假设。统计量没有 p 值直观，所以采用 p 值进行表述。\n\n#### 使用假设检验解决分类问题\n\n沿用上一个例子，我们发现假设检验可以很自然地对应机器学习中的二分类问题：空假设为真对应着没病，空假设为假（备择假设为真）对应着有病。\n\n一次假设检验只能检验一个人，如果得到的 p 值小于显著性水平 α 就拒绝空假设，相当于把该人分为有病一类，而且可以称该次检验是显著的（significant）。如果得到的 p 值大于显著性水平 α 就不能拒绝空假设，相当于把该人分为没病一类。类似地，可以称该次检验是不显著的（non-significant）。一般把备择假设中的类别称为正类或阳性（positive），另一个类别称为反类或阴性（negative）。\n\n事实上，一个人可能没病（空假设为真）也可能有病（空假设为假，备择假设为真），一次检验可能被拒绝（显著）也可能不能被拒绝（不显著）。所以，一次检验有四种可能的结果，用下面的表格表示：\n\n<table><thead><tr><th></th><th> H0​​ is true</th><th> H0​​ is false ( H1​​ is true)</th></tr></thead><tbody><tr><td>Reject  H0​​(Test is declared significant)</td><td>Type I error (FP) (probability= α)</td><td>Correct inference (TP) (probability=1- β)</td></tr><tr><td>Fail to reject  H0​​(Test is declared non-significant)</td><td>Correct inference (TN) (probability=1- α)</td><td>Type II error (FN) (probability= β)</td></tr></tbody></table>\n\n*   Type I error，I 类错误，也叫做 α 错误\n*   Type II error，II 类错误，也叫做 β 错误\n*   FP: false positive，假正例，I 类错误\n*   FN: false negative，假反例，II 类错误\n*   TP: true positive，真正例\n*   TN: true negative，真反例\n\nI 类错误是指空假设为真却被我们拒绝的情况，犯这种错误的概率用 α 表示，所以也称为 α 错误或**弃真错误**；II 类错误是指空假设为假但我们没有拒绝的情况，犯这种错误的概率用 β 表示，所以也称为 β 错误或**取伪错误**。所以，空假设为真并且我们没有拒绝的概率用 1 − α 表示，空假设为假并被我们拒绝的概率用 1 − β 表示。\n\n> 自然，人们希望犯这两类错误的概率越小越好。但对于一定的样本量 n，不能同时做到犯这两类错误的概率都很小。如果减小 α 错误，就会增大犯 β 错误的机会；若减小 β 错误，就会增大犯 α 错误的机会。当然，使 α 和 β 同时减小的办法也有，那就是增大样本量。但样本量不可能没有限制，否则就会使抽样调查失去意义。因此，在假设检验中就有一个对两类错误进行控制的问题。  \n>\n> 一般来说，哪一类错误所带来的后果严重，危害越大，在假设检验中就应当把哪一类错误作为首要的控制目标。但在假设检验中，大家都在执行这样一个原则，那就是首先控制 α 错误。主要原因有两点，一方面，大家都遵循一个统一的原则，讨论问题比较方便。更主要的原因是，原假设一般是比较明确的，而备择假设常常是模糊的。对于一个含义清楚的假设和一个含义模糊的假设，我们更愿意接受前者。正是在这个背景下，我们就更关心如果原假设为真，而我们却把它拒绝了，犯这种错误的概率有多大。而这正是 α 错误的内容。 \n>\n> ——《统计学 - 贾俊平》第六版\n\n注：对于机器学习中的二分类问题，其分类结果也可以用类似的表格表示，一般被称为混淆矩阵，而且和上面的表格有些不同。\n\n<table><thead><tr><th></th><th>预测为正类</th><th>预测为反类</th></tr></thead><tbody><tr><td>实际是正类</td><td>真正例（TP）</td><td>假反例（FN）</td></tr><tr><td>实际是反类</td><td>假正例（FP）</td><td>真反例（TN）</td></tr></tbody></table>\n\n#### 多重假设检验和 FWER, FDR\n\n顾名思义，多重假设检验就是多个假设检验。如果有 m 个人需要检查是否有病，那么就需要进行 m 个假设检验。 m 个假设检验的结果可以表示为：\n\n<table><thead><tr><th></th><th> H0​ is true</th><th> H0​ is false ( H1​ is true)</th><th>Total</th></tr></thead><tbody><tr><td>Reject H0​(Test is declared significant)</td><td>V</td><td>S</td><td>R</td></tr><tr><td>Fail to reject H0​(Test is declared non-significant)</td><td>U</td><td>T</td><td>m−R</td></tr><tr><td>Total</td><td>m0​</td><td>m−m0​</td><td>m</td></tr></tbody></table>\n\n*   m 表示假设检验的个数\n*   m0​ 表示空假设为真的个数\n*   m−m0​ 表示备择假设为真的个数\n*   V  表示假正例的个数\n*   S 表示真正例的个数\n*   U 表示真反例的个数\n*   T 表示假反例的个数\n*   R = V + S 表示拒绝空假设的个数\n\n如果某次假设检验得到的 p 值小于显著性水平 α ，则拒绝空假设，主观上认为发现了一个有病的人（无论该人实际上真有病还是假有病），这种情况记为一次发现（discovery）。所以 R = V + S 表示发现的个数， V 表示错误发现（false discovery）的个数， S 表示正确发现（true discovery）的个数。用 Q 表示发现中错误发现的比例，即 Q = V / R = V / ( V + S ) 。 FWER 定义为 V 大于等于 1 的概率，即 FWER = Pr{ V ≥ 1 } = 1 − Pr{ V = 0 } 。FDR 定义为 Q 的期望，即 FDR = E[Q]。\n\n因为在 m 个检验中， V,S,U,T 都是随机变量，所以 FDR 需要用期望的形式来表示。另外，如果R=0，认为Q=0。为了包含这种情况，FDR=E[V/R∣R>0]⋅P{R>0}。通俗地理解，可以认为 FDR=Q=V/R=V/(V+S)。\n\nFWER 和 FDR 表示一种概念或一种方法，FWER 定义为多重假设检验中发现至少一个 I 类错误的概率，FDR 定义为多重假设检验中错误发现占所有发现的比例。另外，对应地，还存在 FWER 校正方法和 FDR 校正方法（也称为控制方法）。两类校正方法都是用来控制多重假设检验中犯 I 类错误的概率，使其低于显著性水平 α 。FWER 校正有多种实现，其中最经典的是 Bonferroni correction；FDR 校正也有多种实现，其中最经典的就是 Benjamini–Hochberg procedure。\n\n#### 为什么要使用 FWER 和 FDR 校正\n\n在一次假设检验中，我们使用显著性水平 α 和 p 值得出结论。显著性水平 α 一般取 0.05 或 0.01，可以保证一次假设检验中犯 I 类错误的概率和决策错误的风险小于 α 。\n\n但是在 m 次假设检验中，假设 m=100 和 α = 0.01 ，假设检验之间相互独立，不犯错误的概率为  $(1-0.01)^{100}$=36.6% ，而至少犯一次错误的概率高达$P=1-(1-0.01)^{100}$=1-0.366=63.4% 。举个实际的例子，假如有一种诊断艾滋病的试剂，试验验证其准确性为 99%（每 100 次诊断就有一次 false positive）。对于一个被检测的人来说（single test），这种准确性足够了。但对于医院来说（multiple test），这种准确性远远不够，因为每诊断 10000 个人，就会有 100 个非艾滋病病人被误诊为艾滋病。这显然是不能接受的。所以，对于多重检验，如果不进行任何控制，犯一类错误的概率便会随着假设检验的个数迅速增加。\n\nFWER 和 FDR 校正都可以使多重假设检验整体犯 I 类错误的概率低于预先设定的显著性水平 α 。FWER 显得较为保守，它主要是依靠减少假阳性的个数，同时也会减少 TDR(true discovery rate)。而 FDR 方法是一种更加新颖靠谱的方法，它会对每个测试用例使用校正后的 p 值（ q  值），达到了更好的效果：在检验出尽可能多的阳性结果的同时将错误发现率控制在可以接受的范围。\n\n#### 如何使用 FWER 和 FDR 校正\n\n注：FWER 校正和 FDR 校正均有多种实现，这里只介绍两类方法的经典实现。\n\n条件：在m次多重假设检验中，每一次的空假设记为$H_1$,$H_2$​,...,$H_m$​，对应 p 值记为$p_1$,$p_2$​,...,$p_m$​，设定显著性水平α。\n\nBonferroni correction，一般翻译为邦费罗尼校正。只要  $p_i$ ≤ $\\frac{α}{m}$，就拒绝 $H_i$。可以看出，Bonferroni correction 通过把显著性水平降低到$\\frac{α}{m}$。FWER 为发现至少一个 I 类错误的概率，即FWER=Pr{V≥1}，可证:\n\n$$\nFWER=Pr\\{\\bigcup_{i=1}^{m_0}(p_i\\leq\\frac{\\alpha}{m})\\}\\leq\\sum_{i=1}^{m_0}\\{Pr(p_i\\leq\\frac{\\alpha}{m})\\}=m_0\\frac{\\alpha}{m}\\leq m\\frac{\\alpha}{m}=\\alpha.\n$$\n这样就能控制多重假设检验整体犯 I 类错误的概率低于预先设定的显著性水平 α 。另外，FWER 控制不需要假设所有假设彼此之间相互独立，也不需要对空假设为真的个数有要求。\n\nBenjamini–Hochberg procedure，简称为 BH。首先对所有的 p 值从小到大排序，并记作$p_1$,$p_2$,...,$p_m$，其对应的空假设为$H_1$,$H_2$,...,$H_m$。若想控制 FDR 不超过 α ，需要找到最大的正整数 k，使得$P_{(k)}≤\\frac{k \\ast \\alpha}{m}$【公式 1】。然后，拒绝 1≤i≤k 时的所有空假设$H_1$,$H_2$,...,$H_k$。可以看出，BH 相当于对排序后的假设提供了不同的显著性水平。FDR 为 Q 的期望，即 FDR=E[Q]，可证：\n$$FDR=E[Q]\\leq\\frac{m_0}{m}α\\leqα$$\n这样就能从统计学上保证 FDR 不超过 α ，保证多重假设检验整体犯 I 类错误的概率低于预先设定的显著性水平 α 。另外，BH 是有效的条件是要求 m 个检验是相互独立的。\n\n最后再说一下 q  值 ( q -value)， $q=\\frac{P_{(k)} \\ast m}{K}$，相当于对【公式 1】进行变换，一般把 q  值叫做校正后的 p 值。至于 q  值有什么好处，我还没太搞明白。我自己研究的东西已经不需要更深入了，所以写到这里就结束了。\n\n参考资料：\n\n*   [False discovery rate - Wikipedia](https://en.wikipedia.org/wiki/False_discovery_rate)\n*   [Family-wise error rate - Wikipedia](https://en.wikipedia.org/wiki/Family-wise_error_rate)\n*   [如何通俗地解释错误发现率 FDR(false discovery rate)？](https://www.zhihu.com/question/35606197)\n*   [多重检验中的 FDR(false discovery rate, 错误发现率) 是什么？](http://sofasofa.io/forum_main_post.php?postid=1000461&)\n*   [生物信息学中多重检验问题的一个例子（FDR、p 值、q 值）](http://wap.sciencenet.cn/home.php?mod=space&uid=2827057&do=blog&id=968037)\n*   [p-value&FPR 以及 q-value&FDR](https://blog.csdn.net/sixu_9days/article/details/78992642)\n*   [多重假设检验校正为什么有效？](https://blog.csdn.net/a353833082/article/details/45530061)\n*   [《统计学 - 贾俊平》第六版](https://book.douban.com/subject/26375999/)\n","tags":["statistics","knowledge"],"categories":["Statistics"]},{"title":"生信常用文件格式","url":"/post/86e006c4.html","content":"\n# 生信常用文件格式\n\n### 序列格式\n\n- fasta\n    - 一种基于文本的、用于表示核苷酸序列或氨基酸序列的格式。在这种格式中碱基对或氨基酸用单个字母来表示，且允许在序列前添加序列名及注释，文件名常以`.fasta`、`.fa`结尾。\n    \n        > **常见后缀说明：**\n        `.fasta：`普通的FASTA文件 (包括：.fas、 .fasta、.fsa、.fst、.txt和.fa等)\n        `.fna：`表示核酸序列的 FASTA 文件\n        `.faa：`表示氨基酸序列的 FASTA 文件\n        `.ffn：`整个基因组编码区的 FASTA 文件\n        `.frn：`以 DNA 字母编码表示的基因组非编码 RNA 区 ( 如tRNA、rRNA ) 的 FASTA 文件\n    \n        <!--more-->\n    \n    - 格式说明\n      \n        ![Untitled](https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/2C7QE-Z9jpII-20230801.png)\n        \n        - 每条序列的第一行是由`>`开头的任意文字说明。用于序列标记，最好每条序列的标识具有唯一性，一般会用空格把头信息分为两个部分：第一部分是序列名字，它和大于号（>）紧接在一起；第二部分是注释信息，这个可以没有。\n        - 从第二行开始为序列本身，只允许使用既定的核苷酸或氨基酸编码符号，其中核苷酸大小写均可，氨基酸只能大写。\n    \n- fastq\n    - 一种基于文本的存储测序生物序列和**对应碱基（或氨基酸）质量**的文件格式，可以看成fasta文件的变种，一条序列总共包括四个部分。\n    - 格式说明\n      \n        ![Untitled](https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/2C6gJ-2bWdZi-20230801.png)\n        \n        ![Untitled](https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/2C4NX-xloCqX-20230801.png)\n        \n        - 第一行以“@”开头，随后为Illumina 测序标识符 (Sequence Identifiers) 和描述文字 (选择性部分)。\n        - 第二行是碱基序列。\n        - 第三行以“+”开头，随后为Illumina 测序标识符 (选择性部分)。\n        - 第四行是对应碱基的测序质量，该行中每个字符对应的 ASCII 值减去 33，即为对应第二行碱基的测序质量值。\n          \n            ![Untitled](https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/2C3Kc-w9fQdw-20230801.png)\n        \n    - 常用命令\n      \n        ```bash\n        echo \"`CL100189782_L01_read_1.fq.gz | wc -l` / (4*1000000)\" | bc -l\n        # 测序碱基数计算\n        zcat trt_N061011_1.fq.gz | awk'{if(FNR%4==0) base+=length}END{print base/10^9,\"G\";}'\n        ```\n        \n\n### 序列比对格式\n\n- fasta\n    - 最常见的多序列比对格式，和序列的fasta格式类似，只是为了使整体出现最大的可能性，在序列中可能会添加一些`-`。\n    - 格式说明\n      \n        ![Untitled](https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/2BZQW-cXMLlL-20230801.png)\n    \n- clustal\n    - clustal格式的文件是纯文本格式，它可以选择有一个头来声明clustal版本号。接下来是多序列比对，以及关于比对中每个位置保存程度的可选信息。\n    - 格式说明\n      \n        ![Untitled](https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/2BYpp-27jIGf-20230801.png)\n    \n- NEXUS\n    - 一种文本格式，使用“块”的方式来组织信息。以#NEXUS开头，后续说明了总体信息（包括序列数量，大小，数据类型，缺失数据等\n    - 格式说明\n      \n        ![Untitled](https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/2BWjs-UbrEp5-20230801.png)\n    \n- PHYLIP\n    - 主要包括两个部分：一个标题描述对齐维度（序列数量和大小），后跟多序列对齐序列。\n    - 格式说明\n      \n        ![Untitled](https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/2BSwR-mTGVf3-20230801.png)\n        \n\n### 常见文件格式\n\n- Genbank\n    - 最早的生物信息学数据格式之一，包含的信息十分全面，常以`.gbff`结尾\n    - 格式说明\n      \n        ![Untitled](https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/2BR9o-WShI6Z-20230801.png)\n    \n- GFF和GTF\n    - GFF (General Feature Format) 和 GTF (Gene Transfer Format) 都是用于存储注释信息的文本类型。目前常用GFF格式为第二版本的GFF2和第三版本的GFF3，GTF常用GTF2。两者前8列是相同的，GTF格式相交GFF格式更加严格。以GFF3格式为例进行说明。\n    \n    - 常用命令\n      \n        ```bash\n        # grep 匹配查询 -v 输出不匹配的行\n        gunzip Homo_sapiens.GRCh38.94.gtf.gz -c |grep -v '^#' | sed '/^[^chr]/ s/^/chr/' >GRCh38.gtf\n        ```\n        \n    - 格式说明\n      \n        ```r\n        NZ_CP068034.2   RefSeq  region  1   6018586 .   +   .   ID=NZ_CP068034.2:1..6018586;Dbxref=taxon:317;Is_circular=true;Name=ANONYMOUS;collection-date=2001-05-30;country=Belarus: Minsk region;gbkey=Src;genome=chromosome;isolation-source=Ribes nigrum leaves;lat-lon=53.893009 N 27.567444 E;mol_type=genomic DNA;nat-host=Ribes nigrum;strain=BIM B-268\n        NZ_CP068034.2   RefSeq  gene    1   1536    .   +   .   ID=gene-JJQ97_RS00005;Dbxref=GeneID:64441043;Name=dnaA;gbkey=Gene;gene=dnaA;gene_biotype=protein_coding;locus_tag=JJQ97_RS00005;old_locus_tag=JJQ97_25475\n        NZ_CP068034.2   Protein Homology    CDS 1   1536    .   +   0   ID=cds-WP_003437057.1;Parent=gene-JJQ97_RS00005;Dbxref=Genbank:WP_003437057.1,GeneID:64441043;Name=WP_003437057.1;gbkey=CDS;gene=dnaA;inference=COORDINATES: similar to AA sequence:RefSeq:NP_064721.1;locus_tag=JJQ97_RS00005;product=chromosomal replication initiator protein DnaA;protein_id=WP_003437057.1;transl_table=11\n        NZ_CP068034.2   RefSeq  gene    1575    2678    .   +   .   ID=gene-JJQ97_RS00010;Dbxref=GeneID:64441044;Name=dnaN;gbkey=Gene;gene=dnaN;gene_biotype=protein_coding;locus_tag=JJQ97_RS00010;old_locus_tag=JJQ97_25480\n        NZ_CP068034.2   Protein Homology    CDS 1575    2678    .   +   0   ID=cds-WP_201418908.1;Parent=gene-JJQ97_RS00010;Dbxref=Genbank:WP_201418908.1,GeneID:64441044;Name=WP_201418908.1;gbkey=CDS;gene=dnaN;inference=COORDINATES: similar to AA sequence:RefSeq:NP_064722.1;locus_tag=JJQ97_RS00010;product=DNA polymerase III subunit beta;protein_id=WP_201418908.1;transl_table=11\n        ```\n        \n        ```\n        seqname：序列定位，必须为染色体或组装好的\n        scaffoldsource：产生该GTF/GFF 文件的项目名称\n        feature：该段序列的特征：如 exon，CDS，enhancer等\n        start：序列起始位点\n        end：序列终止位点\n        score：得分值，如无得分，则为“.”\n        strand：正负链，用“+”和“-”表示，如不关心或者缺乏正负链信息，则为“.”\n        frame：开放阅读框，分别用0,1,2来区别，如果是非编码序列，则为“.”\n        ```\n        \n        相同点\n        feature：GTF的feature type受限于使用软件的规定，GFF的feature可以为任意内容。\n        \n        score：GTF的score一般不会被用到，都是“.”\n        \n        attribute：GTF的第九列为attribute，为序列对应的属性，其中的内容包括序列对应的 gene_id 和 transcript_id，一般还有序列中包含的外显子数量，在GFF3版本中第九列也为attribute，但不同属性中用“=”相隔，GTF格式中不同属性用“；”分隔\n        \n        group：GFF2的第九列为group，来自同一个组的不同序列都被具有相同的组名。\n        \n    \n- BED\n    - 分析过程中的bed文件一般代表区域信息\n    - 区别\n        - 表示基因注释时，gtf/gff和bed文件的区别\n            - gtf/gff文件一行表示一个exon/CDS等子区域，多行联合表示一个gene；bed文件一行表示一个gene\n            - gtf文件中碱基位置定位方式是1-based，而bed中碱基定位方式是0-based\n              \n                ![Untitled](https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/2BOjr-f4u29t-20230801.png)\n        \n    - 格式说明\n        - **必须包含的3列信息：**\n            - chrom：染色体名字 (e.g.chr3, chrY, chr2_random或者scaffold10671)\n            - chromStart：基因在染色体或scaffold上的起始位置（0-based）\n            - chromEnd：基因在染色体或scaffold上的终止位置 （前闭后开）\n        - **可选的9列信息：**\n            - name：bed文件的行名\n            - score：本条基因在注释数据集文件中的评分（0-1000），在Genome Browser中会根据不同区段的评分显示对应的阴影强度（评分越高灰度越高）\n            - strand：链的方向`+`、`-`或`.` (`.`表示不确定链的方向)\n            - thickStart：CDS区（编码区）的起始位置，即起始密码子的位置。\n            - thickEnd：The endingposition at which the feature is drawn thickly (for example the stop codon ingene displays).\n            - itemRgb：RGB颜色值（如：255,0,0），方便在GenomeBrowser中查看\n            - blockCount：bed行中外显子的数目\n            - blockSizes：`逗号`分割的列，数目与blockCount值对应，每个数表示对应外显子的碱基数。\n            - blockStarts：`逗号`分割的列，数目与blockCount值对应，每个数表示对应外显子的起始位置（数值是相对ChromStart计算的）。\n    \n- SAM\n    - Alignment/Map步骤bwa/STAR/HISAT2等软件对结果的标准输出文件，**用于存储reads比对到参考基因组的比对结果**，是一个纯文本格式，文件一般较大。为了节省硬盘存储，一般使用其高效压缩的二进制格式`bam`文件。\n      \n        ```bash\n        # bam文件查看方式\n        samtools view filename.bam | less -S\n        samtools view -h filename.bam | less -S\n        \n        ###结果展示\n        @HD    VN:1.5  SO:coordinate\n        @SQ    SN:chr1 LN:248956422\n        @SQ    SN:chr10        LN:133797422\n        ......\n        @SQ    SN:chrKI270392.1        LN:971\n        @SQ    SN:chrKI270394.1        LN:970\n        @RG    ID:BH_H3K27ac_2 LB:BH_H3K27ac_2 SM:BH_H3K27ac_2\n        @PG    ID:bwa  PN:bwa  VN:0.7.15-r1140 CL:bwa mem -M -t 8 -R@RG\\tID:BH_H3K27ac_2\\tLB:BH_H3K27ac_2\\tSM:BH_H3K27ac_2\\tPL: /MP\n        @PG    ID:MarkDuplicates      VN:1.138(aa51703435dc6a423013e74e56b0b68405facd79_1439324166)   CL:picard.sam.markduplicates.\n        K00141:244:HVL3NBBXX:8:2119:27235:3145399      chr1    10016  32      115M    =      10016   115     CCCTAACCCTAACCCTAACCC\n        K00141:244:HVL3NBBXX:8:2119:27235:31453147     chr1    10016  32      115M    =      10016   -115   CCCTTACCCTAACCCTAACCC\n        \n        ```\n        \n    - 格式说明\n        - **header内容**\n            - @HD：是必须的标准文件头，包含版本信息；\n            - @SQ：参考序列染色体名字和长度信息 (SN:scaffold name; LN: length)；\n            - @RG：重要read group信息，通常包含测序平台，测序文库和样本ID等信息，分析时用于区分不同样本（重测序时用到）；\n            - @PG：生成此文件的操作过程和参数信息 (program)\n        - **record内容**\n          \n            ```html\n            1. read名称；\n            2. 比对信息位flag值；\n            3. 参考序列染色体编号；\n            4. 5′端起始位置；\n            5. MAPQ：mapping quality，描述比对的质量，数字越大，特异性越高；\n            6. CIGAR字符串，记录插入、删除、错配等信息；\n            7. 配对read所比对到的染色体，仅双端测序的数据才有；\n            8. 配对read所比对到的位置，仅双端测序的数据才有；\n            9. 插入片段的长度，仅双端测序的数据才有；\n            10. read序列；\n            11. read质量值；\n            12. 12列以后的信息都是metadata，程序用标记\n            ```\n            \n            ![Untitled](https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/2BLPX-LrEqJc-20230801.png)\n    \n- BAM","tags":["note","bioinformatics"],"categories":["notes","bioinformatics"]},{"title":"通路(挑选)点图","url":"/post/d1d177a0.html","content":"\n##  挑选通路画DotPlot\n\n<!--more-->\n\n```R\nindir <- \"/path\"\nenrich <- \"deg_Enrich.23522.xlsx\"\nsel <- \"deg_Enrich.select.230522.txt\"\nid <- \"deg_Enrich_Select\"\nday <- \"230522\"\n\n### 加载R包\nlibrary(ggplot2)\nlibrary(readxl)\nsetwd(indir)\n\n### 导入数据, 合并所有的sheet\ntab <- read_xlsx(enrich,sheet=1,col_names = TRUE)\nfor (i in 2:4) {\n    temp <- read_xlsx(enrich,sheet=i,col_names = TRUE)\n    tab <- rbind(tab,temp) \n}\n\n### 筛选出一些通路\nselect <- read.delim(sel,sep=\"\\t\",header=TRUE,check.names=FALSE)\ntab <- tab[tab$ID %in% select$ID,]\n\n\n# 替换列名中的.\nnames(tab) <- gsub(\"\\\\.\",\"_\",names(tab))\n# 将基因集的名称中的KEGG和Hallmark去掉，并将短杠替换为空格\ntab$Description <- gsub(\"_\",\" \",gsub(\"HALLMARK_\",\"H:\",tab$Description))\ntab$Description <- ifelse(grepl(\"hsa\",tab$ID),paste0(\"K:\",tab$Description),tab$Description)\ntab$Description <- ifelse(grepl(\"R-HSA\",tab$ID),paste0(\"R:\",tab$Description),tab$Description)\n### 计算基因比例\ntab$gene.s <- as.numeric(sapply(stringr::str_split(tab$GeneRatio,pattern = \"/\",n = 2),\"[\",1))\ntab$gene.a <- as.numeric(sapply(stringr::str_split(tab$GeneRatio,pattern = \"/\",n = 2),\"[\",2))\ntab$GRatio <- tab$gene.s/tab$gene.a\ntab$Description <- factor(tab$Description,levels = rev(unique(tab$Description[order(tab$Cluster,-tab$GRatio)])))\n\n\n### 进行画图\npdf(paste0(id,\"_\",day,\".pdf\"),5,7)\nggplot(tab,aes(x=Cluster,y=Description,size=GRatio,color=qvalue))+\n    geom_point(stat=\"identity\")+ylab(\"\")+xlab(\"\")+\n    scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 70))+\n    scale_color_gradientn(colors=c(\"#d93f09\",\"blue\"))+\n    theme(panel.grid.major=element_line(colour = \"gray90\"),\n          panel.background=element_rect(fill='transparent',color =\"black\"),\n          axis.text.y = element_text(face = \"bold\",color =\"black\",size = 8))+\n    scale_size_continuous(range = c(3,7)) #控制点的大小,防止极值过大\ndev.off()\n\n```\n\n","tags":["R"],"categories":["code","R"]},{"title":"差异基因火山图","url":"/post/6c0be4fd.html","content":"\n## 差异基因画火山图 \n\n<!--more-->\n\n```R\nindir <- \"/path\"\ndegfile <- \"deg.txt\"\nid <- \"deg_vol\"\nla1 <- \"control\" \nla2 <- \"case\"\nday <- \"230522\"\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggrepel)\nsetwd(indir)\n\n### 读取数据\ndf <- read.delim(degfile,sep=\"\\t\",header=TRUE,check.names=FALSE)\ndf$avg_log2FC <- ifelse(df$cluster==la2,-df$avg_log2FC,df$avg_log2FC )\nhead(df)\n\n\n### 阈值确定：\npvalue = 0.05\nlog2FC = 1\n\n### 根据阈值添加上下调分组标签：\ndf$group <- case_when(\n    df$avg_log2FC > log2FC & df$p_val_adj < pvalue & df$cluster==la1 ~ la1,\n    df$avg_log2FC < -log2FC & df$p_val_adj < pvalue & df$cluster==la2 ~ la2,\n    TRUE ~ 'none'\n)\nhead(df)\n\n\n### 转换为因子，指定绘图顺序；\ndf$'-log10(p_val_adj)' <- -log10(df$p_val_adj) #新增-log10p列\ndf$group <- factor(df$group, levels = c(la1,la2,\"none\"))\n\n\n#自定义颜色：\nmycol <- c(\"#EB4232\",\"#2DB2EB\",\"#d8d8d8\")\n#自定义主题：\nmytheme <- theme_classic() +\n    theme(axis.title = element_text(size = 15),\n          axis.text = element_text(size = 14),\n          legend.text = element_text(size = 14),\n\t\t  plot.margin = margin(15,5.5,5.5,5.5))\n\n### 绘制基本图形\np <- ggplot(data = df,aes(x = avg_log2FC, y = -log10(p_val_adj),color = group)) + #建立映射\n    geom_point(size = 2.2) + #绘制散点\n    scale_colour_manual(name = \"\", values = alpha(mycol, 0.7)) + #自定义散点颜色\n    scale_x_continuous(limits = c(-5, 5),breaks = seq(-5, 5, by = 2)) + #x轴限制\n    scale_y_continuous(expand = expansion(add = c(2, 0)),limits = c(0, 40),\n                       breaks = seq(0, 40, by = 10)) + #y轴限制\n    geom_hline(yintercept = c(-log10(pvalue)),linewidth = 0.7,color = \"black\",lty = \"dashed\") + #水平阈值线\n    geom_vline(xintercept = c(-log2FC, log2FC),linewidth = 0.7,color = \"black\",lty = \"dashed\") + #垂直阈值线\n    mytheme\np\n\n\n### 分别筛选两个分组中的满足条件的基因, 此处通过阈值筛选\nup <- filter(df, group == la1) %>% distinct(gene, .keep_all = T) %>% filter(avg_log2FC > log2FC & p_val_adj < pvalue)\ndown <- filter(df, group == la2) %>% distinct(gene, .keep_all = T) %>% filter(avg_log2FC < -log2FC  & p_val_adj < pvalue)\nhead(up);head(down)\n\n\n### 个性化调整：对齐基因标签\np1 <- p +\n    geom_point(data = up,\n               aes(x = avg_log2FC , y = -log10(p_val_adj)),\n               color = '#EB4232', size = 4.5, alpha = 0.2) +\n    geom_text_repel(data = up,\n                    aes(x = avg_log2FC , y = -log10(p_val_adj), label = gene),\n                    seed = 233,size = 2.5,color = 'black',min.segment.length = 0,\n                    force = 2,force_pull = 2,box.padding = 0.1, max.overlaps = Inf,\n                    segment.linetype = 3, #线段类型,1为实线,2-6为不同类型虚线\n                    segment.color = 'black', #线段颜色\n                    segment.alpha = 0.5, #线段不透明度\n                    nudge_x = 3 - up$avg_log2FC , #标签x轴起始位置调整\n                    direction = \"y\", #按y轴调整标签位置方向，若想水平对齐则为x\n                    hjust = 0 #对齐标签：0右对齐，1左对齐，0.5居中\n                    )\n\np2 <- p1 +\n    geom_point(data = down,aes(x = avg_log2FC , y = -log10(p_val_adj)),\n               color = '#2DB2EB',size = 4.5, alpha = 0.2) +\n    geom_text_repel(data = down,\n                    aes(x = avg_log2FC , y = -log10(p_val_adj), label = gene),\n                    seed = 233,size = 2.5,color = 'black',min.segment.length = 0,\n                    force = 2,force_pull = 2,box.padding = 0.1,max.overlaps = Inf,\n                    segment.linetype = 3,segment.color = 'black',segment.alpha = 0.8,\n                    nudge_x = -3 - down$avg_log2FC ,direction = \"y\",\n                    hjust = 1 #改为左对齐即可\n                    )\n\nggsave(filename = paste0(id,\"_\",day,\".pdf\"),plot = p2,width = 7,height = 5.5)\n```\n\n","tags":["R"],"categories":["code","R"]},{"title":"通路富集","url":"/post/c093987d.html","content":"\n##  通路富集\n\n<!--more-->\n\n```R\nindir <- \"/path\"\ngenelist <- \"deg.txt\"\npre <- \"deg\"\nday <- \"230522\"\n\n### load R packages\nlibrary(dplyr)\nlibrary(Seurat)\nlibrary(clusterProfiler)\nlibrary(enrichplot)\nlibrary(ggplot2)\nlibrary(org.Hs.eg.db)\nlibrary(reactome.db)\nlibrary(ReactomePA)\nlibrary(msigdbr)\nlibrary(openxlsx)\nsetwd(indir)\n\n### 提取H库\nm_t2g <- msigdbr(species = \"Homo sapiens\", category = \"H\") %>% \n    dplyr::select(gs_name, entrez_gene) #两列：gs_name,entrez_gene\n\n### extract Top200 gene\ndeg <- read.delim(genelist,sep=\"\\t\",header = T)\ndeg <- deg %>% dplyr::group_by(cluster) %>% \n    dplyr::top_n(200,wt = avg_log2FC) %>% \n    dplyr::select(cluster,gene) %>% \n    as.data.frame()\n# colnames(deg) <- c(\"cluster\",\"gene\")\nrownames(deg) <- c()\n\n### id transform\nentrez <- bitr(as.character(deg$gene), fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\ndeg <- merge(deg, entrez, by.x = \"gene\", by.y = \"SYMBOL\")\n\n### enrich \n# KEGG\nEKEGG <- compareCluster(ENTREZID~cluster, data=deg, fun=\"enrichKEGG\", organism=\"hsa\", pvalueCutoff=0.05, qvalueCutoff  = 0.5)\nEKEGG=setReadable(EKEGG,'org.Hs.eg.db', 'ENTREZID')\n# GO\nEGO_BP <- compareCluster(ENTREZID~cluster, data=deg, fun=\"enrichGO\", OrgDb = org.Hs.eg.db, ont = \"BP\", pAdjustMethod = \"BH\", pvalueCutoff=0.05, qvalueCutoff  = 0.5, readable = TRUE)\n# Reactome\nEReact <- compareCluster(ENTREZID~cluster, data=deg, fun=\"enrichPathway\")\n# hallmarkers\nEHM <- compareCluster(ENTREZID~cluster,data = deg,enricher, TERM2GENE=m_t2g)\nEHM = setReadable(EHM,'org.Hs.eg.db', 'ENTREZID')\n\n\n### plot result\npdf(paste0(indir,\"/\",pre,\"_enrich.\",day,\".pdf\"), 10, 15)\ndotplot(EKEGG, showCategory=5, color=\"qvalue\",title=\"KEGG\")+theme(axis.text.x = element_text(vjust=1,hjust=1,size=8,angle = 45))\ndotplot(EGO_BP, showCategory=5, color=\"qvalue\",title=\"GO_BP\")+theme(axis.text.x = element_text(vjust=1,hjust=1,size=8,angle = 45))\ndotplot(EReact,showCategory=5,color=\"qvalue\",title=\"Reactome\")+theme(axis.text.x = element_text(vjust=1,hjust=1,size=8,angle = 45))\ndotplot(EHM,title=\"Hallmark gene sets\")+theme(axis.text.x = element_text(vjust=1,hjust=1,size=8,angle = 45))\ndev.off()\n\n\n### output result\nwrite.xlsx(list(GO = EGO_BP@compareClusterResult, KEGG = EKEGG@compareClusterResult, Reactome=EReact@compareClusterResult,HallMarker=EHM), paste0(pre,\"_Enrich.\",day,\".xlsx\"))\n```\n\n","tags":["R"],"categories":["code","R"]},{"title":"Memory Tfh","url":"/post/a14b8b86.html","content":"\n# Memory Tfh\n\n### <span style=\"color: #1B5E20\"><span style=\"background-color: #f1f8e9\">💡 Meta Data</span></span>\n\n**<span style=\"color: #1b5e20\">Title: </span>** <span style=\"background-color: #dbeedd\">Memory T Follicular Helper CD4 T Cells</span>\n\n**<span style=\"color: #1b5e20\">Journal: </span>** <span style=\"background-color: #dbeedd\">Frontiers in Immunology</span>\n\n**<span style=\"color: #1b5e20\">Authors: </span>** <span style=\"background-color: #dbeedd\">J. Scott Hale; Rafi Ahmed</span>\n\n**<span style=\"color: #1b5e20\">Pub.date: </span>** <span style=\"background-color: #dbeedd\">2015</span>\n\n**<span style=\"color: #1b5e20\">DOI: </span>** <span style=\"background-color: #dbeedd\"><a href=\"https://doi.org/10.3389/fimmu.2015.00016\" rel=\"noopener noreferrer nofollow\">10.3389/fimmu.2015.00016</a></span>\n\n### <span style=\"color: #E65100\"><span style=\"background-color: #fff8e1\">📜 研究背景 &amp; 基础 &amp; 目的</span></span>\n\n---\n\n* **Tfh的身份，功能，特征总结**\n\n    > <span class=\"highlight\" data-annotation=\"%7B%22attachmentURI%22%3A%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FWKECEGFV%22%2C%22pageLabel%22%3A%221%22%2C%22position%22%3A%7B%22pageIndex%22%3A0%2C%22rects%22%3A%5B%5B175.127%2C643.183%2C549.845%2C651.833%5D%2C%5B176.263%2C631.228%2C549.845%2C639.878%5D%2C%5B176.263%2C619.273%2C549.845%2C627.923%5D%2C%5B176.263%2C607.318%2C549.845%2C615.968%5D%2C%5B176.263%2C595.362%2C549.845%2C604.012%5D%2C%5B176.263%2C583.407%2C549.845%2C592.057%5D%2C%5B176.263%2C571.452%2C222.551%2C580.102%5D%5D%7D%2C%22citationItem%22%3A%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FST2QQLY8%22%5D%2C%22locator%22%3A%221%22%7D%7D\">“T follicular helper (Tfh) cells are the subset of CD4T helper cells that are required for generation and maintenance of germinal center reactions and the generation of long-lived humoral immunity. This specialized T helper subset provides help to cognate B cells via their expression of CD40 ligand, IL-21, IL-4, and other molecules. Tfh cells are characterized by their expression of the chemokine receptor CXCR5, expression of the transcriptional repressor Bcl6, and their capacity to migrate to the follicle and promote germinal center B cell responses.”</span>\n\n* <span class=\"highlight\" data-annotation=\"%7B%22attachmentURI%22%3A%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FWKECEGFV%22%2C%22pageLabel%22%3A%221%22%2C%22position%22%3A%7B%22pageIndex%22%3A0%2C%22rects%22%3A%5B%5B84.128%2C237.87%2C291.863%2C246.946%5D%2C%5B45.354%2C226.413%2C251.697%2C235.489%5D%5D%7D%2C%22citationItem%22%3A%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FST2QQLY8%22%5D%2C%22locator%22%3A%221%22%7D%7D\">“Tfh cells play a **critical role** in the generation of effective and long-lived humoral immune responses to antigens”</span>\n\n* **Th1与Th2的Signature**\n\n    > <span class=\"highlight\" data-annotation=\"%7B%22attachmentURI%22%3A%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FWKECEGFV%22%2C%22pageLabel%22%3A%221%22%2C%22position%22%3A%7B%22pageIndex%22%3A0%2C%22rects%22%3A%5B%5B151.919%2C100.31%2C291.878%2C109.774%5D%2C%5B45.354%2C88.929%2C184.418%2C98.005%5D%5D%7D%2C%22citationItem%22%3A%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FST2QQLY8%22%5D%2C%22locator%22%3A%221%22%7D%7D\">“Th1 signature cytokine IFNγ or the Th2 cytokines IL-4, IL-5, and IL-13”</span>\n\n<img src=\"https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/3ZWjS-ztJofW-20230314.png\" style=\"zoom:50%;\" />\n\n* BCL6是Tfh产生维持所必需的，也促进了Tfh的分化，部分是通过抑制转录调节因子 <u>Tbet、RORγt、GATA3</u>\n\n    和 <u>PRDM1</u>的转录\n\n### <span style=\"color: #2E7D32\"><span style=\"background-color: #f1f8e9\">📊 研究内容</span></span>\n\n---\n\n* 记忆T细胞相比NaiveT的优势\n\n    * 抗原特异性记忆细胞的**数量**相对于其幼稚的抗原特异性前体而言有所**增加**，从而提供更好的覆盖范围和对病原体再攻击的更快速的细胞反应。\n    * 其次，记忆细胞并不局限于血液循环和次级淋巴器官，而是还可以**运输并驻留在非淋巴组织**中，如果它们的特定病原体进入该特定解剖部位，它们可以在非淋巴组织中迅速发挥效应功能。\n    * 记忆 T 细胞在细胞内在编程方面发生了变化，使它们能够**快速回忆起它们的效应功能**，例如特定效应细胞因子、趋化因子和细胞毒性分子的快速表达\n    * 寿命更\n\n* 问题\n\n    * First, do Tfh cells survive to become memory cells?\n    * Second, do memory cells derived from Tfh cells maintain their commitment/programing to recall Tfh effector cells？\n    * Third, instead possess pluripotency/plasticity to become cells of other T helper lineages?\n\n* Tfh并非注定死亡，而是有部分发展成为记忆细胞\n\n    > <span class=\"highlight\" data-annotation=\"%7B%22attachmentURI%22%3A%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FWKECEGFV%22%2C%22annotationKey%22%3A%227WXYGK7S%22%2C%22color%22%3A%22%23ff6666%22%2C%22pageLabel%22%3A%223%22%2C%22position%22%3A%7B%22pageIndex%22%3A2%2C%22rects%22%3A%5B%5B303.333%2C445.427%2C549.855%2C454.503%5D%2C%5B303.333%2C433.97%2C549.855%2C443.046%5D%2C%5B303.333%2C422.513%2C549.855%2C431.589%5D%2C%5B303.333%2C411.056%2C529.96%2C420.132%5D%5D%7D%2C%22citationItem%22%3A%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FST2QQLY8%22%5D%2C%22locator%22%3A%223%22%7D%7D\">“Together, these studies clearly demonstrate that not all Tfh effector cells are terminally differentiated and fated to die. Instead, some Tfh effector cells progress to become memory cells that have some similar features compared to their Tfh effector predecessors.”</span>\n\n* 记忆Tfh细胞形成有**两种模型**\n\n    * Lineage Commitment Model\n    * Degrees of Commitment Model\n\n* 记忆Tfh细胞恢复自己的记忆可能存在**四种潜在的机制**\n\n    * cell-intrinsic programs\n    * Tfh associated transcription factors\n    * Localization and trafficking\n    * Epigenetic regulation\n\n### <span style=\"color: #4a148c\"><span style=\"background-color: #f5f5f5\">🚩 研究结论</span></span>\n\n---\n\n* 表型独特的 CXCR5+ 记忆 CD4 T 细胞亚群具有特定于 Tfh 功能的记忆潜力这一发现引发了未来研究的重要问题，这些研究将为传染病的疫苗接种策略提供信息。\n* 了解 Tfh 记忆细胞如何获得和保存 Tfh 基因表达程序并在重新激活时优先回忆这些程序的机制将为了解这些细胞的谱系维持和可塑性提供重要的见解。\n* 最后，未来的工作需要确定在初免和加强免疫期间利用 Tfh 记忆细胞的最佳方法，以促进提高保护性和长寿命抗体反应的方法\n\n### <span style=\"color: #006064\"><span style=\"background-color: #e0f7fa\">📌 感想 &amp; 疑问</span></span>\n\n---\n\n### <span style=\"color: #1565C0\"><span style=\"background-color: #e1f5fe\">🔬 研究方法</span></span>\n\n---\n\nReferred in [主笔记](zotero://note/u/FNQNUGED/?ignore=1&line=-1)\n","tags":["paper","celltype","Tfh"],"categories":["paper","review","celltype"]},{"title":"Tfh Summary","url":"/post/fd2daa16.html","content":"\n# Tfh总结1\n\n### <span style=\"color: #1b5e20\"><span style=\"background-color: #f1f8e9\">💡 Meta Data</span></span>\n\n**<span style=\"color: #1b5e20\">Title: </span>** <span style=\"background-color: #dbeedd\">T Follicular Helper Cells</span>\n\n**<span style=\"color: #1b5e20\">Journal: </span>** <span style=\"color: #2e2e2e\"><span style=\"background-color: #dbeedd\">Encyclopedia of Cell Biology (Second Edition)</span></span>\n\n**<span style=\"color: #1b5e20\">Authors: </span>** <span style=\"background-color: #dbeedd\">Filipa Ribeiro; Michelle Linterman; Luis Graca</span>\n\n**<span style=\"color: #1b5e20\">Pub.date: </span>** <span style=\"background-color: #dbeedd\">2023</span>\n\n**<span style=\"color: #1b5e20\">DOI: </span>** <span style=\"background-color: #dbeedd\"><a href=\"https://doi.org/10.1016/B978-0-12-821618-7.00137-1\" rel=\"noopener noreferrer nofollow\">10.1016/B978-0-12-821618-7.00137-1</a></span>\n\n### <span style=\"color: #e65100\"><span style=\"background-color: #fff8e1\">📜 研究背景 &amp; 基础 &amp; 目的</span></span>\n\n---\n\n* **Tfh的功能**\n\n    <span class=\"highlight\" data-annotation=\"%7B%22attachmentURI%22%3A%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FETMP2AEB%22%2C%22annotationKey%22%3A%22KPBK4X4F%22%2C%22color%22%3A%22%23ff6666%22%2C%22pageLabel%22%3A%22367%22%2C%22position%22%3A%7B%22pageIndex%22%3A0%2C%22rects%22%3A%5B%5B108.227%2C460.678%2C539.058%2C468.648%5D%2C%5B67.465%2C450.757%2C149.336%2C460.249%5D%5D%7D%2C%22citationItem%22%3A%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FRZCM877F%22%5D%2C%22locator%22%3A%22367%22%7D%7D\"><span style=\"background-color: #ff666680\">“These T-B interactions are critical for the isotype switching and affinity maturation of B cells leading to the production of high-affinity antibodies.”</span></span>\n\n* **Bcell成熟的重要性，需要调控，防止产生自身免疫性的B细胞**\n\n    >   <span class=\"highlight\" data-annotation=\"%7B%22attachmentURI%22%3A%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FETMP2AEB%22%2C%22pageLabel%22%3A%22368%22%2C%22position%22%3A%7B%22pageIndex%22%3A1%2C%22rects%22%3A%5B%5B73.134%2C533.021%2C544.769%2C541.108%5D%2C%5B73.134%2C521.952%2C544.82%2C530.42%5D%2C%5B73.134%2C511.01%2C544.783%2C519.479%5D%2C%5B73.134%2C500.139%2C544.804%2C508.226%5D%2C%5B73.134%2C489.197%2C544.719%2C497.284%5D%2C%5B73.134%2C478.128%2C544.809%2C486.597%5D%2C%5B73.133%2C467.13%2C544.788%2C475.598%5D%2C%5B73.134%2C456.315%2C391.075%2C464.402%5D%5D%7D%2C%22citationItem%22%3A%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FRZCM877F%22%5D%2C%22locator%22%3A%22368%22%7D%7D\">“The formation of germinal centers (GCs) within secondary lymphoid organs, in response to infection or immunization, is a crucial event for the production of T cell-dependent protective antibodies. Within GCs, mature B cells undergo <strong>affinity maturation</strong> and <strong>somatic hypermutation</strong> (SHM), leading to the production of antibodies that bind pathogens with high affinity. These antibodies can neutralize infectious agents providing protection against subsequent infection, leading to effective humoral responses and memory. Nevertheless, the <strong>unpredictability</strong> of the SHM can result in the generation of autoreactive B cell clones, thus contributing to a dysregulated humoral response that can lead to autoimmune diseases (Vinuesa et al., 2009). Consequently, the GC reaction requires strict regulation to ensure a <strong>balanced humoral immune response</strong> by guaranteeing the emergence of high-affinity B cell clones targeting pathogens while preventing the generation of autoreactive GC B cells.”</span>\n\n### <span style=\"color: #2e7d32\"><span style=\"background-color: #f1f8e9\">📊 研究内容</span></span>\n\n---\n\n* **Tfh的关键作用**\n\n    <span class=\"highlight\" data-annotation=\"%7B%22attachmentURI%22%3A%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FETMP2AEB%22%2C%22annotationKey%22%3A%225H7438C5%22%2C%22color%22%3A%22%23ffd400%22%2C%22pageLabel%22%3A%22368%22%2C%22position%22%3A%7B%22pageIndex%22%3A1%2C%22rects%22%3A%5B%5B387.374%2C434.432%2C544.807%2C444.397%5D%2C%5B73.134%2C423.306%2C491.858%2C431.775%5D%5D%7D%2C%22citationItem%22%3A%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fusers%2F9243551%2Fitems%2FRZCM877F%22%5D%2C%22locator%22%3A%22368%22%7D%7D\"><span style=\"background-color: #ffd40080\">“Tfh cells provide crucial signals to B cells to support GC development and function by mediating affinity maturation through the positive selection of GC B cells”</span></span>\n\n* **关键基因：<span style=\"color: #ff2020\">BCL6</span>、CXCR5、ICOS、PD-1、SLAM、SAP、PRDM1**\n\n* **CD4 Tfh Marker**\n\n    <img src=\"https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/4wzMW-xLihMN-20230313.png\" style=\"zoom:50%;\" />\n\n* **Tfh细胞分化**\n\n    <img src=\"https://whalege-1258362576.cos.ap-guangzhou.myqcloud.com/Typora/img/4tz6e-jW7aow-20230313.png\" style=\"zoom:35%;\" />\n\n    * DC刺激CD4 NaiveT\n\n        * MHC II呈递抗原\n        * CD80/86-CD28提供共刺激信号\n        * ICOS-ICOSL提供定位信号，将TFH定位于TB边界\n    * pre-Tfh与B细胞相互作用：获得迁移到 GC 并完成其发育为 GC Tfh 细胞的能力\n\n        * TCR-MHC II\n        * CD28-CD80/86\n        * ICOS-ICOSL\n        * CD40L-CD40\n        * SAP-SFR\n    * Tfh与B细胞的相互作用：Tfh 细胞产生 IL-4 和 IL-21，从而为 B 细胞提供支持\n\n        * TCR-MHC II\n        * CD28-CD80/86\n        * ICOS-ICOSL\n        * CD40L-CD40\n        * SAP-SFR\n        * PD-1-PD-L1\n\n### <span style=\"color: #4a148c\"><span style=\"background-color: #f5f5f5\">🚩 研究结论</span></span>\n\n---\n\n* <span style=\"color: rgb(46, 46, 46)\">帮助更有效疫苗的合理设计</span>\n* <span style=\"color: rgb(46, 46, 46)\">揭示用于诊断和患者分层的新生物标志物</span>\n* <span style=\"color: rgb(46, 46, 46)\">揭示治疗自身免疫的新治疗靶点</span>\n\n### <span style=\"color: #006064\"><span style=\"background-color: #e0f7fa\">📌 感想 &amp; 疑问</span></span>\n\n---\n\n### <span style=\"color: #1565c0\"><span style=\"background-color: #e1f5fe\">🔬 研究方法</span></span>\n\n---\n\nReferred in [主笔记](zotero://note/u/FNQNUGED/?ignore=1&line=-1)\n","tags":["paper","celltype","Tfh"],"categories":["paper","review","celltype"]},{"title":"ATAC分析流程","url":"/post/786e1faa.html","content":"\n> 转载于网络，原文地址 [www.plob.org](https://www.plob.org/article/24719.html)\n\n### 一、基础知识\n\n#### 1. 解密表观遗传学的三个方向与测序方法\n\n*   **1. 探索染色质的开放性**（chromatin accessibility）  \n    `ATAC-seq`: Assay of Transposase Accessible Chromatin sequencing  \n    `DNase-seq`: DNase I hypersensitive sites sequencing  \n    `FAIRE-seq`: Formaldehyde-Assisted Isolation of Regulatory Elements sequencing\n*   **2. 探索转录因子的绑定与组蛋白修饰**（TF binding and histone modifications）  \n    `ChIP-seq`: Chromatin Immuno-Precipitation sequencing\n*   **3. 探索核小体占位**（nucleosome positioning and occupancy）  \n    `MNase-seq`: Micrococcal Nuclease sequencing\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632949992-700x506.png)\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632949994-700x844.png)\n\n#### 2. 名词解释\n\n*   `epigenetics`：表观遗传学。表观遗传学修饰在不改变 DNA 序列的情况下控制着基因的表达，包括染色质重塑、组蛋白修饰、DNA 甲基化和 microRNA 通路等\n*   `peaks`: 峰。常用来表示染色质的开放程度，因为是测序的 reads 落在了染色质的开放区，堆叠后被可视化的一种丰度的体现。\n\n但 peaks 到底代表什么？莫非 peaks 所在区域要么是启动子要么是增强子？再或者就是笼统定义为调控元件？（我目前的观点是，只能把他理解为酶切的位点，如果非要定义是否是特定分调控元件，只能进行后续分析。）\n\n* `THSs`: 转座酶超敏感位点（transposase hypersensitive sites）。\n\n* `CREs`: 顺式调控元件（cis-regulatory elements）。即 DNA 分子中具有转录调节功能的特异 DNA 序列。按功能特性，真核基因顺式作用元件分为启动子、增强子及沉默子。\n\n* `ACRs`: 染色质开放区域（accessible chromatin regions）。即正常或核小体被酶切裸露出来的 DNA 片段所在的区域。这篇[【NP | 2019】](https://www.nature.com/articles/s41477-019-0548-z)根据 ACRs 距离最近基因的距离将 ACRs 分为三种类型：genic (gACRs; overlapping a gene), proximal (pACRs; within 2kb of a gene) or distal (dACRs; >2 kb from a gene)，分别是跨越基因的，近端的，远端的染色质开放区。\n\n* `transposon`: 转座子。一段可以从原位上单独复制或断裂下来，环化后插入另一位点，并对其后的基因起调控作用的 DNA 序列。\n\n* `promoter`: 启动子。启动子是位于结构基因 5'端上游的 DNA 序列，能活化 RNA 聚合酶，使之与模板 DNA 准确的结合并具有转录起始的特异性。每个启动子包括至少一个转录起始点以及一个以上的功能组件（典型的如 TATA 盒子）\n\n* `proximal promoters`: 近端启动子。是 DNA 上位于基因开始之前的一个区域，在那里蛋白质和其他分子结合在一起准备读取该基因。\n\n* `enhancer`: 增强子。增强子是远离转录起始点、决定基因的时间、空间特异性表达、增强启动子转录活性的 DNA 序列，其发挥作用的方式通常与方向、距离**无关**，可位于转录起始点的上游或下游。从功能上讲，没有增强子存在，启动子通常不能表现活性；没有启动子时，增强子也无法发挥作用。根据南京大学陈迪俊老师的研究表明增强子比启动子能结合更多的转录因子 [(Nature Communications)](https://www.nature.com/articles/s41467-019-09513-2)\n\n* `TFs`: 转录因子（transcription factors）是保证目的基因以特定的强度在特定的时间与空间表达的蛋白质分子。与 RNA 聚合酶 Ⅱ 形成转录起始复合体，共同参与转录起始的过程。\n\n* `TSS`: 转录起始位点（transcription start site）。在一个典型的基因内部，排列顺序为转录起始位点 (TSS，一个碱基)- 起始密码子编码序列 (ATG)- 终止密码子编码序列 (TGA)- 转录终止位点 (TTS)，即 TSS-ATG-TGA-TTS\n\n* `histone`：组蛋白。通常含有 H1，H2A，H2B，H3，H4 等 5 种成分，其中 H1 与 H3 极度富含赖氨酸（lysine），H1 不保守，其他组蛋白的基因非常保守。除 H1 外，其他 4 种组蛋白均分别以二聚体 (共八聚体）相结合，形成核小体核心。DNA 便缠绕在核小体的核心上。而 H1 则与核小体间的 DNA 结合\n\n* `nucleosome`: 核小体。是由 DNA 和组蛋白形成的染色质基本结构单位。每个核小体由 146bp 的 DNA 缠绕组蛋白八聚体 1.75 圈形成。核小体核心颗粒之间通过 50bp 左右的连接 DNA 相连，暴露在核小体表面的 DNA 能被特定的核酸酶接近并切割\n\n* `H3K4me1`: 组蛋白 H3 上的第 4 位赖氨酸发生单甲基化（mono-methylation of H3 at lysine 4） [（NG | H3K4me1 与增强子的关系）](https://www.nature.com/articles/s41588-017-0018-3)\n\n* `H3K9ac`：组蛋白 H3 上的第 9 位赖氨酸发生乙酰化（H3 acetylation marks at lysine 9）关于 H3K4me1 与 H3K9ac 的不同，依旧可以参考这篇文献[【NP | 2019】](https://www.nature.com/articles/s41477-019-0548-z)或[【NC | 2019】](https://www.nature.com/articles/s41467-019-09513-2)\n\n* `组蛋白甲基化`：甲基化可发生在组蛋白的赖氨酸和精氨酸残基上，而且赖氨酸残基能够发生单、双、三甲基化，而精氨酸残基能够单、双甲基化，这些不同程度的甲基化极大地增加了组蛋白修饰和调节基因表达的复杂性\n\n* `组蛋白乙酰化`：四种类型的组蛋白相互作用，将细胞核里的 DNA 紧紧地包装起来。这样的紧密包装能够有效阻止酶读取 DNA 上的遗传信息。然而，乙酰基连到组蛋白上能削弱它们对 DNA 的占据。因此局部乙酰化能暴露出相应的基因，让它们更容易激活![](https://static.plob.org/wp-content/uploads/2021/09/1632949997-700x318.png)\n\n    真核生物细胞核内染色质结构\n\n### 二、基础分析\n\n### 1. 分析前的准备\n\n1.1 下载 ATAC 测序数据（或者用你自己的数据也行）\n\n*   所需软件：[Aspera Connect](https://www.ibm.com/aspera/connect/)\n*   软件安装与使用：参考[这系列文章](https://www.plob.org/tag/aspera)\n*   数据下载：项目 ID[【PRJNA480717】](https://www.ncbi.nlm.nih.gov/bioproject/PRJNA480717/)[【文章原文】](https://academic.oup.com/jxb/article/70/15/3867/5481770)，SRR 序列号如下图，下载方法和上文相同。由于数据量大，测试浪费时间，所以我在每个文件中取了 100w 条 reads，由于百度网盘太慢了，你可以去扣扣群 559758504 里面随便下载一个用于测试。\n\n```\nfastqc -t 8 -o ./ *.fastq.gz\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950000-700x238.png)\n\nimage.png\n\n1.2 下载 tair10 基因组与 gff3 注释文件\n\n```\nbwa index -p /路径/bwaIndexTair /路径/TAIR10_genome.fa\n```\n\n1.3 安装 miniconda\n\n*   由于后续分析大多数软件都是来源于 conda，因此你必须知道怎么使用。参考[【conda 的安装与使用】](https://www.plob.org/article/13100.html)\n\n1.4 所需软件安装（分析中所用到的软件都汇集于此，下文不再介绍如何下载）\n\n请先激活 conda 环境在安装！\n\n```\nconda install -c bioconda -y fastqc\nconda install -c bioconda -y trimmomatic\nconda install -c bioconda -y bwa\nconda install -c bioconda -y samtools\nconda install -c bioconda -y picard\nconda install -c bioconda -y macs2\nconda install -c bioconda -y bedtools\nconda install -c bioconda -y deeptools\nconda install -c bioconda -y homer\n\n```\n\n后续分析是使用 SRR7512044 作为测试数据，但是思路和方法都可以借鉴。\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950000-1.png)\n\n测试数据\n\n### 2. 测序质量检测\n\n*   所需软件：[FastQC](https://anaconda.org/bioconda/fastqc)[【官方网站】](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/)\n\n```\nfastqc -t 8 -o ./ *.fastq.gz\n```\n\n`-t`: 线程  \n`-o`: 存放路径，不用指定前缀，默认为. fastq.gz 前面的字段  \n`*.fastq.gz`: fastqc 可以同时接受多个 fastq.gz 文件，因此采用正则表达式【*】表示全部\n\n*   结果解读  \n    由于开始测序时不准确，因此前 15bp 左右的 ATGC 含量有波动，需要在后面截掉。而最长 reads 为 76bp，则暗示着我最后至少要保留多长的序列。  \n    一般我的计算思路是：保留的序列长度 =（最长的的 reads 长度 - 前面波动的碱基长度）× 40%\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950001-700x514.png)\n\n### 2. 测序质量检控制\n\n*   所需软件：[Trimmomatic](https://anaconda.org/bioconda/trimmomatic)[【官方网站】](https://links.jianshu.com/go?to=%255Bhttp%3A//www.usadellab.org/cms/%3Fpage%3Dtrimmomatic%255D%28http%3A//www.usadellab.org/cms/%3Fpage%3Dtrimmomatic%29)[【中文介绍】](https://www.plob.org/article/6258.html)  \n    其实这批数据已经做过质控了，如何判断的呢？QC 的为一个范围且短于提供给 NCBI 上的数据。因此我们没必要质控，但为了流程的完整性，还是假装质控一下。质控之后，还要进行质检，如此循环，直到合格。\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950001-1-700x296.png)\n\n```\n# 定义一些变量，后面修改起来方便\nfilename=SRR7512044\n \ntrimmomatic PE -threads 10 \n./${filename}_1.fastq.gz ./${filename}_2.fastq.gz \n./${filename}_1.clean.fq.gz ./${filename}_1.drop.fq.gz \n./${filename}_2.clean.fq.gz ./${filename}_2.drop.fq.gz \nHEADCROP:15 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:24\n\n```\n\n`PE`: 双端模式。需要两个输入文件，正向测序序列和反向测序序列：`sample_R1.fastq.gz`和`sample_R2.fastq.gz`；  \n以及四个输出文件：`sample_1.clean.fq.gz`和`sample_1.drop.fq.gz`；`sample_2.clean.fq.gz`和`sample_2.drop.fq.gz`  \n`-threads`: 线程数  \n`HEADCROP`: 从 reads 的开头切掉指定数量的碱基，即从 fastqc 中看的  \n`LEADING`: 从 reads 的开头切除质量值低于阈值的碱基  \n`TRAILING`: 从 reads 的末尾开始切除质量值低于阈值的碱基  \n`SLIDINGWINDOW`: 从 reads 的 5' 端开始，进行滑窗质量过滤，切掉碱基质量平均值低于阈值的滑窗  \n`MINLEN`: 如果经过剪切后 reads 的长度低于阈值则丢弃这条 reads，即上面的计算方法：（76-15）×40%≈24\n\n### 3. 建立索引与序列比对\n\n*   所需软件：[bwa](https://www.plob.org/tag/bwa) 和 [samtools](https://www.plob.org/tag/samtools)\n*   建立基因组索引。需要的时间挺长的，建议放后台。建好之后以后就可以跳过这一步了，且在经典的比对软件 STAR、hisat2、bowtie2 和 bwa-mem 中我更喜欢使用 STAR 和 bwa-mem。本次使用 bwa-mem 操作演示\n\n```\nbwa index -p /路径/bwaIndexTair /路径/TAIR10_genome.fa\n```\n\n`-p`: 索引前缀，后缀自动补充  \n`TAIR10_genome.fa`: 基因组文件\n\n*   序列比对  \n    由于 sam 文件较大，因此我们直接跳过 sam，使用 samtools 转换为排序后的 bam 文件，注意【|】不要漏掉，且排序是依据 reads 比对到基因组的位置排的\n\n```\n# 定义一些变量，后面用\nfilename=SRR7512044\nindex=/路径/bwaIndexTair\n \nbwa mem -M -t 8 \n-R \"@RGtID:${filename}tSM:${filename}tLB:WXStPL:Illumina\" \n$index \n${filename}_1.clean.fq.gz \n${filename}_2.clean.fq.gz \n| samtools sort -O bam -@ 10 -o ./${filename}.raw.bam\n#无论干啥，生成bam文件后就要建立bam索引，并检查比对情况\nsamtools index -@ 10 -b ./${filename}.raw.bam\nsamtools flagstat ./${filename}.raw.bam > ./${filename}.raw.stat\ncat ${filename}.raw.stat\n\n```\n\n`-M`: 将 shorter split hits 标记为次优，以兼容 Picard’s markDuplicates 软件  \n`-R`: STR 完整的 read group 的头部，可以用't' 作为分隔符， 在输出的 SAM 文件中被解释为制表符 TAB. read group 的 ID，会被添加到输出文件的每一个 read 的头部，  \n`-O`: 表示输出的 bam 文件  \n`-o`: 输出的 bam 文件名  \n`-t`与`@`: 线程数\n\n*   关于 stat 中内容的解释如下\n\n```\n14608455   0 in total (QC-passed reads   QC-failed reads) reads总数\n37967   0 secondary                                       出现比对到参考基因组多个位置的reads数\n0   0 supplementary                                       可能存在嵌合的reads数\n0   0 duplicates                                          重复的reads数\n14590894   0 mapped (99.88% : N/A)                        比对到参考基因组上的reads数\n14570488   0 paired in sequencing                         属于PE read的reads总数。\n7285244   0 read1                                         PE read中Read 1 的reads 总数。\n7285244   0 read2                                         PE read中Read 2 的reads 总数。\n14507068   0 properly paired (99.56% : N/A)               完美比对的reads总数。PE两端reads比对到同一条序列，且根据比对结果推断的插入片段大小符合设置的阈值。\n14551500   0 with itself and mate mapped                  PE两端reads都比对上参考序列的reads总数。\n1427   0 singletons (0.01% : N/A)                         PE两端reads，其中一端比上，另一端没比上的reads总数。\n26260   0 with mate mapped to a different chr             PE read中，两端分别比对到两条不同的序列的reads总数。\n17346   0 with mate mapped to a different chr (mapQ>=5)   PE read中，两端分别比对到两条不同\n\n```\n\n### 4. 去除 PCR 重复并再次进行质控\n\n*   所需软件：picard 与 [samtools](https://www.plob.org/tag/samtools)  \n    不建议使用 sambamba，虽然快，但是毛病多，尤其是在你不知情的情况下，软件卡死或者在最后输出文件时提示输出文件夹过多等。\n\n```\npicard MarkDuplicates \nREMOVE_DUPLICATES=true \nI=${filename}.raw.bam \nO=${filename}.rmdup.bam \nM=${filename}.rmdup.log\n# 实时监测我们的数据发生了什么变化\nsamtools index ${filename}.rmdup.bam\nsamtools flagstat ${filename}.rmdup.bam > ./${filename}.rmdup.stat\n\n```\n\n`REMOVE_DUPLICATES=true`: 表示将检测出的 PCR duplication 直接去除；  \n`I`: 或者 INPUT 指定输入的 bam 文件；  \n`O`: 或者 OUTPUT 指定输出去除 PCR duplication 的 bam 文件；  \n`M`: 或者 METRICS_FILE 指定输出的 matrix log 文件。\n\n*   下面是再次进行质控\n\n```\nsamtools view -h -f 2 -q 30 ${filename}.rmdup.bam \n| grep -v -e \"mitochondria\" -e \"*\" -e \"chloroplast\" \n| samtools sort -O bam -@ 10 -o - > ${filename}.last.bam\n# 实时监测我们的数据发生了什么变化\nsamtools index ${filename}.last.bam\nsamtools flagstat ${filename}.last.bam > ./${filename}.last.stat\n\n```\n\n`-h`: 输出的 sam 文件带 header，默认不带  \n`-f`: 输出含有所有 flag 的 reads  \n`-q` 比对的最低质量值，一般 20/30 都可以  \n其他参数介绍看 [samtools 使用简述](https://www.plob.org/tag/samtools)，需要说明的是由于比对到线粒体和叶绿体的 reads 不是我们关注的重点，因此使用`grep`剔除掉，当然了，做动物的话需要剔除什么视情况而定了。\n\n*   好了，下面来看看我们的数据从 raw data -> rmdup -> last 到底发生了那些变化![](https://static.plob.org/wp-content/uploads/2021/09/1632950002-700x344.png)\n*   然后，从 IGV 看看发生了什么变化  \n    关于使用 IGV 查看 bam 文件中 reads 呈现不同颜色的说明\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950005-700x773.png)\n\n### 5. 统计过滤后的结果中 Insertsize 长度分布\n\n*   所需软件：picard  \n    Insertsize =（read2 的比对位点 - read1 的比对位点） read2 的长度。也可以随便点击上图 IGV 中任一一条 reads 查看插入片段的大小\n\n```\npicard CollectInsertSizeMetrics \nI=./${filename}.last.bam \nO=./${filename}.last.insertsize \nH=./${filename}.last.hist.pdf\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950006-700x683.png)\n\n### 5. peak calling 与 FRiP_score/SPOT_score 的计算\n\n*   所需软件：[macs2](https://www.plob.org/article/7118.html) 和 [bedtools](https://www.plob.org/tag/bedtools)  \n    因为 macs2 需要用到基因组的有效大小，而软件本身就提供了 4 个物种的有效基因组大小。\n\n```\neffective_genome_size=119481543\n \nbedtools bamtobed -i ${filename}.last.bam > ${filename}.last.bed\nmacs2 callpeak \n-t ${filename}.last.bed \n-g ${effective_genome_size} \n--nomodel --shift -100 --extsize 200 \n-n ${filename}.last \n-q 0.01 --outdir ./peaks\n\n```\n\n*   其实，这里面讨论最多的是`--nomodel --shift -100 --extsize 200`这些参数如何选择，下面的图很形象的展示了参数的作用。当然，我也是查阅了很多资料与文献，一般默认在`ATAC-seq，DNase-seq，FAIRE-seq`的时候将`shift`设置为`extsize`的一半，且参数固定为：`--nomodel --shift 100 --extsize 200`。而在`MNase-seq`的时候，参数固定为：`--nomodel --shift 37 --extsize 73`。在`ChiP-seq`的时候不用移峰，所以只使用`-nomodel`，当做组蛋白修饰的时候，由于 peak 并[不典型](http://blog.sina.com.cn/s/blog_4bc742520102uy64.html)，所以使用`–nomodel –shift 73`参数。另外如何使用`macs2 predictd`预测双峰模型，这里就不展开介绍了，可以私聊我，我把脚本发你。\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950007.png)\n\nshift 与 extsize 到底在干啥？\n\n*   下面是我见过的图中解释**移峰**现象最清楚的了，可以参考\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950007-1-700x503.png)\n\n移峰\n\n*   最后，就是输出文件的解读\n    1.  **${filename}_peaks.xls**\n\n```\n前几行是callpeak时的命令。后面是：\n1.染色体号\n2.peak起始位点\n3.peak结束位点\n4.peak区域长度\n5.peak的峰值位点（summit position）\n6.peak 峰值的高度（pileup height at peak summit, -log10(pvalue) for the peak summit）\n7.peak的富集倍数（相对于random Poisson distribution with local lambda）\n\n```\n\n*   2.  **${filename}_peaks.narrowPeak**\n\n```\nnarrowPeak文件是BED6 4格式，可以上传到IGV查看\n1.染色体号\n2.peak起始位点\n3.peak结束位点\n4.peak name（样本名 _peak_1的后缀之类的）\n5.-10*log10qvalue\n6.正负链\n7.fold change\n8.-log10pvalue\n9.-log10qvalue\n10.相对于峰的峰顶位置（relative summit position to peak start）\n\n```\n\n*   注意：excel 里的起始坐标需要减 1 才与 narrowPeak 的坐标一致，见下图。\n    3.  **${filename}_summits.bed**\n\n```\nBED格式的文件，包含peak的summits（峰顶）位置\n1.染色体号\n2.峰的峰顶起始位点（注意是峰顶，不是峰，他只是一个点）\n3.峰的峰顶起始位点（因此二者就差一个碱基的位置）\n4.峰顶（样本名 _peak_1的后缀之类的）\n5.-log10pvalue\n\n```\n\n* 注意：excel 里的起始坐标需要减 1 才与 narrowPeak 的坐标一致，见下图。\n\n* **另外，需要告诉你的是，bed 文件中第 2 列中的峰顶起始位点是如何计算的？**  \n    bed 文件中第 2 列（峰的峰顶起始位点） = xls 第二列 xls 第十列 -1。或者↓↓↓↓  \n    bed 文件中第 2 列（峰的峰顶起始位点） = narrowPeak 第二列 narrowPeak 第十列\n\n* 总览比较：![](https://static.plob.org/wp-content/uploads/2021/09/1632950008-700x407.png)\n\n    bed，narrowPeak，bdg，xls 四种类型输出文件的比较\n\n* FRiP_score 的计算[【官方介绍】](https://www.encodeproject.org/atac-seq/)  \n    简单来说，FRiP_score 说的就是统计落在 Peaks 里面的 reads 数量与所有比对到基因组上 reads 数量的比值。可以作为判定样本测序质量的一个指标。\n\n```\nReads=$(bedtools intersect -a ${filename}.last.bed -b ${filename}_peaks.narrowPeak |wc -l|awk '{print $1}')\ntotalReads=$(wc -l ${filename}.last.bed|awk '{print $1}') \necho ${Reads} ${totalReads} ${filename} 'FRiP_score:' $(echo \"scale=2;100*${Reads}/${totalReads}\"|bc)'%'\n\n```\n\n*   官网上说 ATAC-Seq 的 FRiP score should be >30%（[https://www.encodeproject.org/atac-seq/](https://www.encodeproject.org/atac-seq/)）我猜是如果大多数 reads 都不在 peaks 区域，说明测序质量或者实验效果不是太好，因为酶切切开的就是 peaks 区域，太少不是就偏离实验目的了嘛\n*   SPOT_score 的计算[【官方介绍】](https://www.encodeproject.org/data-standards/terms/)[【软件安装】](https://www.encodeproject.org/software/hotspot/)  \n    简单来说，SPOT_score 就是在 FRiP_score 的基础上增加了测序深度的条件限制，比如 FRiP 是统计全局的 reads，而 SPOT 只统计测序深度为 30× 的 reads，大于 30× 的 reads 不再参与统计。目前我还在探索中如何计算。\n\n### 二、高级分析\n\n所谓的高级并不高大上，做了有可能也不能让你的文章提升档次，望周知！\n\n### 1. IGV 可视化\n\n*   前面的 bam 文件，narrowPeak 文件，bed 文件都有了，现在还差一个 bw 文件，因此我们先跑下面的代码，然后在 IGV 里面统一看一下\n*   所需软件：[deeptools](https://anaconda.org/bioconda/deeptools) 和 [IGV](https://software.broadinstitute.org/software/igv/download)  \n    主要是为生成 bw 文件用于 IGV 展示\n\n```\nbamCoverage --bam ${filename}.last.bam -o ${filename}.last.bw \n    --binSize 10 \n    --normalizeUsing RPGC \n    --effectiveGenomeSize ${effective_genome_size} \n    --ignoreForNormalization chrX \n    --extendReads\n\n```\n\n注：如果发现没有这个包 pysam.libchtslib，直接安装`pip install numpydoc`  \n`-o`: 生成 bw 文件  \n`binSize`: 自行设定覆盖度计算的窗口大小 (bin)  \n`normalizeUsing`: 数据准化方法，有三种 RPGC，RPKM，CPM，BPM  \n`ignoreForNormalization`: 设置你想忽略的染色体名称  \n`extendReads`: 让 reads 扩展至 fragment 的大小\n\n*   IGV 一览\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950009-700x436.png)\n\nIGV 可视化 bw、narrowpeak，bed，bam，gff 文件\n\n### 2. TSS/TES 可视化\n\n* 所需软件：[deeptools](https://anaconda.org/bioconda/deeptools)  \n    主要是如何生成 [Refseq 文件](http://www.bio-info-trainee.com/2494.html)，虽然官网上提供了一些，但总归是不能覆盖所有物种，因此，我们可以从 gff/gtf 文件中自己创造。\n\n* 先提取**基因**的位置信息（不是 cds 或者 exon），根据不同的 gff 进行修改，但格式始终是`` `chrom/chromStart/chromEnd/name/score/strand` ``\n\n    ```\n    awk -vFS='[\\t=;]' -vOFS=\"\\t\" \\\n    '{if ($3==\"gene\") print $1,$4,$5,$10,$6,$7}' \\\n    TAIR10.gff|sed 's/Chr//g' > refseq.bed  \n    #由于tair官网上提供的基因组文件中染色人命名没有Chr，为保持一致，这里去掉\n    \n    ```\n\n* 然后进行 TSS 可视化\n\n```\ncomputeMatrix reference-point --referencePoint TSS  -p 15 \n    -b 2000 -a 2000 \n    -R ./refseq.bed \n    -S *.bw \n    -o TSS.gz \n    --skipZeros \n    --outFileSortedRegions Heatmap1sortedRegions.bed\nplotHeatmap -m TSS.gz -out TSS.Heatmap.pdf --plotFileFormat pdf\nplotProfile -m TSS.gz -out TSS.Profile.pdf --plotFileFormat pdf --perGroup\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950010-700x629.png)\n\n*   然后进行 TES 可视化\n\n```\ncomputeMatrix scale-regions  -p 15  \n    -b 2000 -a 2000 \n    -R ./refseq.bed \n    -S *.bw \n    --skipZeros -o body.gz\nplotHeatmap -m body.gz -out body.Heatmap.pdf --plotFileFormat pdf\nplotProfile -m body.gz -out body.Profile.pdf --plotFileFormat pdf --perGroup\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950011-700x630.png)\n\n*   另外，参考下面这个图，看每个参数控制的哪里，如何同时绘制多个等。这是我好久之前总结的，清晰度堪忧\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950013-700x649.png)\n\n### 3. 相关性可视化（依旧是使用 deeptools）\n\n*   因为我测试样本少，所以就使用[官网的图](https://deeptools.readthedocs.io/en/latest/content/tools/plotCorrelation.html)了哈，但代码是能跑通的，放心使用。\n*   先使用 [bw] 文件生成 [npz] 文件。所有样本做相关性，用 [*.last.bw]，多个单列出来也行\n\n```\nmultiBigwigSummary bins -b *.last.bw -o number.of.bins.npz\n\n```\n\n*   画相关性热图\n\n```\nplotCorrelation -in number.of.bins.npz \n--corMethod pearson \n--skipZeros \n--plotTitle \"Pearson Correlation of Average Scores Per Transcript\" \n--plotFileFormat pdf \n--whatToPlot heatmap --colorMap RdYlBu --plotNumbers \n-o heatmap_PearsonCorr_bigwigScores.pdf \n--outFileCorMatrix PearsonCorr_bigwigScores.tab\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950014-700x605.png)\n\nheatmap\n\n*   画相关性点图\n\n```\nplotCorrelation -in number.of.bins.npz \n--corMethod pearson \n--skipZeros \n--plotTitle \"Pearson Correlation of Average Scores Per Transcript\" \n--plotFileFormat pdf \n--whatToPlot scatterplot \n-o scatterplot_PearsonCorr_bigwigScores.pdf \n--outFileCorMatrix PearsonCorr_bigwigScores.tab\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950015-700x734.png)\n\n相关性点图\n\n### 5. ChIPseeker 对 peaks 进行注释和可视化\n\n*   对 peak 的注释分为两个部分——结构注释和功能注释  \n    结构注释会将 peak 所落在基因组上的区域结构注释出来，比如说启动子区域，UTR 区域，内含子区域等等。同时，也会将与 peak 最临近的基因注释出来，非常好用。  \n    功能注释其实并不是对 peak 进行注释的，而是对 peak 最临近的基因注释的，因此这部分就和传统的 GO/KEGG 等分析如出一辙啦。\n\n#### **5.1 结构注释**\n\n5.1.1 **准备工作**：导入包，没有的安装吧。另外需要使用 gff/gtf 构建一个 TxDb。因为[官网](http://www.bioconductor.org/packages/release/BiocViews.html%23___TxDb)上 TxDb 也不是每一个物种都有（目前共 43 个），因此我们自己手动构建。\n\n```\n#if (!requireNamespace(\"BiocManager\", quietly = TRUE))\n#    install.packages(\"BiocManager\")\n#BiocManager::install(\"clusterProfiler\")\n \nlibrary(clusterProfiler)\nlibrary(ChIPseeker)\nlibrary(GenomicFeatures)\ntxdb <- makeTxDbFromGFF(\"public/bioinfoYu/genome/tair10/TAIR10.gff\",\n                        format=\"gff\")    #也可以使用gtf\nkeytypes(txdb)    #感兴趣的话，可以用以下方法探索txdb都包含了什么内容\nkeys(txdb)\n\n```\n\n5.1.2 **单个文件的结构注释**（不推荐在这一步加 OrgDB 的内容，没用）\n\n```\n#读入单个summits文件\npeaks <- readPeakFile(\"SRR7512044_summits.bed\")\n#结构注释\npeakAnno <- annotatePeak(peaks,\n                         TxDb=txdb,\n                         tssRegion=c(-1000, 1000))\n\n```\n\n上面的 tssRegion 取值有说法的，因为判定 \"Promoter\", \"Exon\", \"Intron\", \"Intergenic\" 等结构的依据就是根据范围来的。比如定义 1000 以内的，则在 1kbp 之内规定为 \"Promoter (<=1kb)\"，而 1k-2k 内定义为 \"Downstream (1-2kb)\"。但你定义 2000 以内呢，则在 1kbp 之内规定为 \"Promoter (<=1kb)\"，而 1k-2k 内定义为 \"Promoter (1-2kb)\"。虽然，ChIPseeker 会标记出来区域，但还是三思后再取范围。\n\n```\n#注释完，进行可视化，多种图可供选择\nplotAnnoBar(peakAnno)\nplotDistToTSS(peakAnno)\nvennpie(peakAnno)\nplotAnnoPie(peakAnno)\n#install.packages(\"ggupset\")\nlibrary(ggupset)\nupsetplot(peakAnno)\n#install.packages(\"ggimage\")\nlibrary(ggimage)\nupsetplot(peakAnno, vennpie=TRUE)\n \n#最后将我们的注释结果转为数据框，便于查看\ndf <- as.data.frame(peakAnno)\n#将注释到的基因提取出来（第14列），用于后续功能分析\ngene <- df[,14]\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950016-700x323.png)\n\n提供可视化的方法\n\n5.1.3 **多个文件的结构注释**\n\n```\n#一次也可以读入多个summits文件，使用list存储，然后使用lapply注释\nfiles = list(peak1 = \"peaks.bed\", peak2 = (\"peak.bed\"))\npeakAnnoList <- lapply(files, \n                       annotatePeak,\n                       TxDb=txdb,\n                       tssRegion=c(-2000, 2000))\nplotAnnoBar(peakAnnoList)\nplotDistToTSS(peakAnnoList)\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950019-700x220.png)\n\n读入多个 summits 文件的可视化\n\n#### **5.2 功能注释**\n\n5.2.1 **可选支线**  \n由于这里需要物种的 OrgDb 注释库。如果你足够幸运，研究的物种正好在[官网](http://www.bioconductor.org/packages/release/BiocViews.html%23___OrgDb)仅提供的 20 个物种中存在，那就拿来用吧。除了以上这些都好说，还有是 id 转换，后面再说。  \n5.2.2 **OrgDb 下载**  \n本次测试是用拟南芥的样本，我推荐在[官网](http://www.bioconductor.org/packages/release/BiocViews.html%23___OrgDb)中直接将所需要的的 OrgDb 库下载到服务器上，这样就不用在 R 里面重复在网上获取浪费时间了。比如说拟南芥，就可以下载，这样就把【org.At.tair.db】下载到了服务器或者本地了。\n\n```\nwget http://www.bioconductor.org/packages/release/data/annotation/src/contrib/org.At.tair.db_3.13.0.tar.gz\ntar -zvxf org.At.tair.db_3.13.0.tar.gz\n\n```\n\n5.2.3 **导入 OrgDb**\n\n```\n#从本地下载OrgDb库（如果你直接下载到了R的lib里面，就直接library也可）\ninstall.packages(\"/public/bioinfoYu/genome/tair10/org.At.tair.db\", repos=NULL)\n#另外一种方法\n#if (!requireNamespace(\"BiocManager\", quietly = TRUE))install.packages(\"BiocManager\")\n#BiocManager::install(\"org.At.tair.db\")\n#载入库\nlibrary(org.At.tair.db)\n#感兴趣的话，看看org.At.tair.db包含的都是些啥\n#查看包含的列名\nkeytypes(org.At.tair.db)\n#查看包含的基因ID\nkeys(org.At.tair.db)\n#随便选择一个基因和一些列名，看一看到第是什么东东，不过因为导入了其他包，下面命令报错，我至今还没有解决\nselect(org.At.tair.db,keys=\"AT1G01010\",columns = c(\"ENTREZID\",\"GO\",\"SYMBOL\"))\n\n```\n\n5.2.4 **ID 转换**（非必须）  \n上面`5.1.2`已经得到 peak 附近的基因集【gene】了，如果需要 ID 转换，就是用`clusterProfiler`中的`bitr`函数\n\n```\n#首先，去除版本号，如AT1G50040.1后面的.1，当然我们的测试集没有，因此不用做\n#gene_rm <- gsub(\".[0-9] $\",\"\",gene)\n#下面进行ID转换\nkeytypes(org.At.tair.db)\ngene_last <- bitr(geneID = gene, \n                    fromType = \"TAIR\",\n                    toType = c(\"ENTREZID\", \"SYMBOL\", \"GENENAME\"),\n                    OrgDb = org.At.tair.db)\n \n# geneID    需要转换的ID\n# fromType  当前ID类型\n# toType    转换成什么ID，使用keytypes()查看有哪些类型\n# OrgDb     注释数据库\n\n```\n\n5.2.5 **GO 功能注释**\n\n```\n# 因为keyType不接受数据框类型的数据，因此我们转换为字符型\ngenelist <- gene.symbol[,2]  #注意我这里把ENTREZID单独拿出来了，所以下面自然是keyType = \"ENTREZID\",\ngo_result <- enrichGO(genelist,\n                      keyType = \"ENTREZID\", \n                      OrgDb = org.At.tair.db, \n                      ont = \"BP\", #BP,MF,CC,ALL可选\n                      pAdjustMethod = \"BH\", \n                      qvalueCutoff = 0.05, \n                      readable = FALSE)\n#可视化，showCategory=20调整显示的条目多少\ndotplot(go_result, showCategory=20)\n#将结果转为数据框，可以选择导出\ngoresult <- as.data.frame(go_result)\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950021-700x685.png)\n\nGO 可视化\n\n5.2.6 **KEGG 通路注释**\n\n```\n#geneClusters必须是数据框类型，ID必须是ENTREZID类型\nclass(gene.symbol)\ncompKEGG <- compareCluster(geneClusters=gene.symbol, \n                           fun = \"enrichKEGG\",\n                           organism = \"ath\",    #在 http://www.genome.jp/kegg/catalog/org_list.html 上查看物种简写\n                           pvalueCutoff  = 0.05, \n                           pAdjustMethod = \"BH\")\ndotplot(compKEGG, showCategory = 20, title = \"KEGG Pathway Enrichment Analysis\")\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950022-700x342.png)\n\nKEGG 可视化\n\n### 6. homer 寻找 motif\n\n*   所需软件：[homer](https://anaconda.org/bioconda/homer)[【官方网站】](http://homer.ucsd.edu/homer/)\n\n```\n# 提取peaks的位置信息文件\nawk '{print $4\"t\"$1\"t\"$2\"t\"$3\"t \"}' \nSRR7512044_peaks.narrowPeak > SRR7512044.homer_peaks.tmp\n# 寻找motif\nfindMotifsGenome.pl SRR7512044.homer_peaks.tmp \n./TAIR10_genome.fa   #指定参考基因组\n./SRR7512044.motif   #输出文件夹的名字\n-size 200 -len 8,10,12\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950023-700x261.png)\n\n### 7. DiffBind 找差异 peak\n\n*   所需软件：[DiffBind](http://www.bioconductor.org/packages/release/bioc/html/DiffBind.html)\n\n首先根据我自己的理解将**找差异 peak 的原理**说一下：既然是找差异的 peak，那首先就要保证不同样本间 peak 所在的区间基本一致才可以。因此**第一步**就是找到多个样本相同的 peak 区间。**第二步**，基于这些相同区域的 peak 开始找差异，这个地方的差异和传统的 RNA-Seq 找差异基因的原理一模一样，都是**对落在峰区间的 reads 进行计数**，数量不同的话差异就由此而来。但软件都帮我们做了，就不用考虑那么多了\n\n*   我废话真多，其实最麻烦的就是**准备输入数据**，下面来看怎么做  \n    一般情况相下需要包括以下几列：`\"SampleID\"， \"Tissue\"， \"Factor\"， \"Condition\" ，\"Treatment\"，\"Replicate\"， \"bamReads\" ，\"ControlID\" ，\"bamControl\" ，\"Peaks\"和\"PeakCaller\"`\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950025-700x148.png)\n\n*   但我们做 ATAC-Seq 的哪里有什么`control，controlID，bamControl`，因此删掉，而`\"Tissue\"， \"Factor\"， \"Condition\" ，\"Treatment\"，\"Replicate\"，`表示的都是分组的意思，因此我保留了两个`\"Factor\"，\"Replicate\"`，最后 csv 文件的样子如下：![](https://static.plob.org/wp-content/uploads/2021/09/1632950026-700x127.png)\n\n`SampleID`：不能有重复  \n`Factor`：进行分组，后面要做差异分析的依据  \n`Replicate`：重复的编号  \n`bamReads`：最后生成的 bam 文件。全路径 bam 文件名  \n`Peaks`：macs2 生成的 narrowPeak 文件。全路径 narrowPeak 文件名  \n`PeakCaller`：说明 peak 类型，使用 narrowPeak 文件则为`narrow`。使用 xls 文件，则用`macs`。使用 bed 文件，则用`bed`\n\n*   开始正题\n\n```\n# 安装包\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))install.packages(\"BiocManager\")\nBiocManager::install(\"DiffBind\")\nlibrary(DiffBind)\n#导入数据，dba函数会将会将bam文件一同导入，因此csv中的路径一定要准确\ntamoxifen <- dba(sampleSheet=\"atDiff.csv\")\n#查看样本间的相关性\nplot(tamoxifen)\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950027.png)\n\n```\n#计算每个样本中的reads数\ntamoxifen <- dba.count(tamoxifen)\n#简单查看计算结果\ninfo <- dba.show(tamoxifen)\nlibsizes <- cbind(LibReads=info$Reads, FRiP=info$FRiP, PeakReads=round(info$Reads * info$FRiP))\nrownames(libsizes) <- info$ID\nlibsizes\n\n```\n\n```\n#统计结果\n       LibReads FRiP PeakReads\ncmt2_1  6720462 0.29   1948934\ncmt2_2  7747491 0.33   2556672\nwild_1  7078309 0.36   2548191\nwild_2  8030752 0.34   2730456\nddcc_1  6370232 0.30   1911069\nddcc_2  6956429 0.35   2434750\n\n```\n\n<pre\"># 默认基于测序深度对数据进行标椎化 tamoxifen <- dba.normalize(tamoxifen) norm <- dba.normalize(tamoxifen, bRetrieve=TRUE) norm #查看进行标准化的文库大小 (library-size)，其实就是各样本文库大小总和的平均值，你可以计算验证一下 normlibs <- cbind(FullLibSize=norm$lib.sizes, NormFacs=norm$norm.factors, NormLibSize=round(norm$lib.sizes/norm$norm.factors)) rownames(normlibs) <- info$ID normlibs\n\n```\n#标椎化结果\n       FullLibSize  NormFacs NormLibSize\ncmt2_1     6720462 0.9398443     7150612\ncmt2_2     7747491 1.0834724     7150612\nwild_1     7078309 0.9898885     7150612\nwild_2     8030752 1.1230859     7150612\nddcc_1     6370232 0.8908652     7150612\nddcc_2     6956429 0.9728438     7150612\n\n```\n\n```\n#分组，格式是表头在最前面，要分的组依次写在后面，只能两两比较，因此后面只能写两组，但可以多执行几次，都会追加到tamoxifen 中\n#分组1，后面使用contrast=1单独查看\ntamoxifen <- dba.contrast(tamoxifen, contrast=c(\"Factor\",\"ddcc\",\"wild\"))\n#分组2，后面使用contrast=2单独查看\ntamoxifen <- dba.contrast(tamoxifen, contrast=c(\"Factor\",\"cmt2\",\"wild\"))\n#当然还可有分组3,4,5等，均可以使用contrast=number单独查看\ntamoxifen\n#按照分组分别进行差异分析，默认使用DESeq2进行计算，可以选择method = DBA_EDGER(edgR)，或者两个都要method = DBA_ALL_METHODS\ntamoxifen <- dba.analyze(tamoxifen)\ndba.show(tamoxifen, bContrasts=TRUE)\n#查看差异分析的结果与导出为csv文件\n#查看第1组差异分析的结果\ntamoxifen.DB_1 <- dba.report(tamoxifen,contrast=1)\ntamoxifen.DB_1\nwrite.csv(tamoxifen.DB_1, file=\"diffBind_result.csv\")\n \n#查看第2组差异分析的结果\ntamoxifen.DB_2 <- dba.report(tamoxifen,contrast=2) tamoxifen.DB_2 write.csv(tamoxifen.DB_2, file=\"diffBind_result.csv\") ##传统的上下调在找差异peak中称为“Gain”或“Loss” #查看第1组的差异peak数量“Fold>0或<0”控制是“Gain”或“Loss” sum(tamoxifen.DB$Fold>0,contrast=1)\nsum(tamoxifen.DB$Fold<0,contrast=1) #查看第2组的差异peak数量“Fold>0或<0”控制是“Gain”或“Loss” sum(tamoxifen.DB$Fold>0,contrast=2)\nsum(tamoxifen.DB$Fold<0,contrast=2)\n\n```\n\n*   由于我是使用两组进行测试的，所以可以使用 contrast=1 或 contrast=2 分别查看，由于都是相同的代码，下面进行可视化的时候，**只选择 contrast=1 进行可视化**\n\n```\n#韦恩图可视化\ndba.plotVenn(tamoxifen, contrast=1, bDB=TRUE, bGain=TRUE, bLoss=TRUE, bAll=FALSE)\n \n#PCA\ndba.plotPCA(tamoxifen) #这里可以使用所有样本进行PCA\ndba.plotPCA(tamoxifen, contrast=1, label=DBA_FACTOR)#单独对分组1进行PCA\n \n#MA plots\ndba.plotMA(tamoxifen, contrast=1)\n \n#Volcano plots\ndba.plotVolcano(tamoxifen, contrast=1)\n \n#Box plots\ndba.plotBox(tamoxifen, contrast=1)\n \n#Heatmap\nhmap <- colorRampPalette(c(\"red\", \"black\", \"green\"))(n = 13)\n#对所有样本的所有的差异peak画热图\ndba.plotHeatmap(tamoxifen,correlations=FALSE,scale=\"row\",colScheme = hmap)\n#单独对分组1中所有的差异peak画热图\ndba.plotHeatmap(tamoxifen, contrast=1, correlations=FALSE, scale=\"row\", colScheme = hmap)\ndba.plotHeatmap(tamoxifen,correlations=FALSE,scale=\"row\",colScheme = hmap)\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950027-1-700x349.png)\n\n*   想画下面的图，可是一直提示 could not find function dba.plotProfile，因此还没有成功，用官方提供的图展示一下吧，大家能画出来可以和我说一声哦。这是[【官方文档】](https://content.cruk.cam.ac.uk/bioinformatics/software/DiffBind/plotProfileDemo.html)可以参考\n\n```\n#Profiling and Profile Heatmaps\ndba.plotProfile(tamoxifen)\n\n```\n\n![](https://static.plob.org/wp-content/uploads/2021/09/1632950029-700x643.png)\n\n### 8. footprint 分析\n\n目前我还没有找到使用于所有物种的软件，HINT-ATAC 用来做 footprint 分析的话，应该只支持不几个物种，比较鸡肋。[ATACseqQC](https://bioconductor.org/packages/release/bioc/manuals/ATACseqQC/man/ATACseqQC.pdf) 应该是一款不错的软件，最近还在探索\n\n### 三、ATAC-seq 与多组学数据联合分析\n\n**转录因子 ChIP-seq**：由于大部分转录因子结合的是染色质开放区域，所以 ATAC-seq 的 Peak 可能和转录因子 ChIP-seq 的 Peak 存在部分重叠的情况，而且 ATAC-seq 得到的 Peak 长度往往更长，因此 ATAC-seq 数据和转录因子 ChIP-seq 数据可以相互验证。转录因子在 ChIP-seq 中独有的 Peak 暗示这个转录因子可能是结合在异染色质区域的驱动型转录因子（Pioneer TFs），驱动型转录因子随后招募染色质重塑复合体以及其它转录因子开始转录。另外，联合分析已经报道的 ChIP-seq 数据可以更准确地分析转录因子的足迹。  \n**组蛋白修饰 ChIP-seq**：ATAC-seq 数据同样可以和组蛋白修饰 ChIP-seq 数据进行联合分析，其中转录激活性修饰（H3K4me3，H3K4me1 和 H3K27ac 等）与染色质开放程度呈正相关，转录抑制性修饰（H3K27me3）与染色质开放程度呈负相关。联合已知的增强子和启动子之间的相互作用数据也可以帮助构建调控网络。  \n**RNA-seq**：ATAC-seq 数据可以通过联合分析 RNA-seq 数据来发现哪些差异表达的基因是受染色质可及性调控的，进一步可以推测这些差异表达的基因哪些是受开放染色质中具有 motif 和 footprint 的转录因子调控的，因此 ATAC-seq 与 RNA-seq 的联合分析有助于破译基因调控网络和细胞异质性。\n","tags":["note","ATAC","pipeline"],"categories":["notes","ATAC"]},{"title":"免疫基础知识","url":"/post/b40e0536.html","content":"\n## 免疫细胞\n\n### Treg的分类和功能\n\nTreg是T细胞的一个子集， 占**CD4+T细胞**总数的5-10%，具有<span style=\"background:#FF9999;\">维持体内平衡</span>和<span style=\"background:#FF9999;\">预防自身免疫</span>的功能，其特征是**CD4**、**CD25**、**FOXP3**和低水平**CD127**的共同表达。高水平的FOXP3和特异性去甲基化区域（TSDR）的去甲基化是Treg的显著特征，TSDR是FOXP3基因中的一个保守区域。\n\nTregs可分为两类：<u>天然调节性T细胞（nTregs）</u>和<u>诱导调节性T细胞（iTregs）</u>。两种类型的Tregs都普遍表达 Foxp3。\n\n* nTregs在胸腺中自然发育，其抑制作用是通过细胞间接触实现的，它们的主要功能是维持正常的免疫耐受和控制炎症反应。\n\n* iTregs来源于肿瘤微环境信号诱导的外周原始T细胞，包括肿瘤抗原、细胞因子（如IL-10, TGF-β）和其他可溶性分子。iTregs通过多种促进肿瘤进展的机制抑制效应T细胞（Teff）、NK细胞和DC的抗肿瘤免疫作用。\n\nTregs主要有以下五种功能机制：\n\n* Tregs分泌抑制性细胞因子，包括 IL-10、TGF-β 和 IL-35。\n\n* Tregs 通过颗粒酶和穿孔素杀死效应细胞。\n\n* Tregs 影响效应细胞的功能：Treg 与效应T细胞竞争消耗 IL-2，从而抑制效应T细胞的生长；Tregs通过产生胞外酶CD39和CD73 促进TME中腺苷的产生，诱效应细胞导的抑制和抗增殖作用；Tregs通过缝隙连接将大量 cAMP 转移到效应T细胞，干扰其代谢。\n\n* Tregs通过刺激性和抑制性受体（CTLA-4 或 LAG3）诱导DC耐受，后者通过IDO进一步抑制T细胞的能力。\n* MDSCs和Tregs 产生的因子形成正反馈环，促进增殖，增强抑制环境。  \n\n## 免疫分子\n\n### 趋化因子\n\n趋化因子是一组低分子量（约8~12kDa）的细胞因子，调节免疫细胞的运输与分化，是免疫系统功能行使的核心。基于其主要蛋白质结构的前两个半胱氨酸残基的位置，可分为4个不同的亚家族：**C、CC、CXC、CX3C**。基于其功能，可分为<u>内稳态趋化因子</u>和<u>炎症趋化因子</u>。\n\n主要功能\n\n* 器官发育：在器官发育和血管生成过程中引导干细胞迁移到适当的位置；介导细胞增殖；介导淋巴细胞的成熟。\n\n* 免疫监视：介导免疫细胞在健康外周组织中的稳态，维持免疫耐受。\n\n* 组织更新再生：引导干细胞和祖细胞迁移，以促进损伤后的组织更新或再生；促进愈合过程中的血管生成；促进上皮、内皮、间充质的愈合。\n* 宿主防御：促进先天免疫细胞募集至感染部位，防止微生物传播；调节适应性免疫反应，包括免疫激活和免疫记忆；调控效应细胞功能和在外周组织的存活。\n","tags":["note","immune"],"categories":["notes","immune"]},{"title":"tmux安装教程","url":"/post/686264ec.html","content":"\n## tmux 简介\n\ntmux 是一个 terminal multiplexer（终端复用器），它可以启动一系列终端会话。\n简单来说，安装 tmux 之前，一旦**与服务器断开连接**或者**关闭 xhell 或其他 shell 终端**，我们的服务器上运行的程序就会终止，而且输入的历史消息全部消失。因此如果我们希望整晚在服务器上跑代码，我们的电脑也要整晚一直连接着服务器。而安装了 tmux 之后，即使我们关闭了 shell 终端或者不幸与服务器断开连接，我们在服务器上的程序**依然在运行**。\n\n## tmux 安装\n\n* root 用户安装一行命令\n\n    ```bash\n    sodu apt-get install tmux\n    ```\n\n* 非 root 用户需要下载源码安装\n\n    * **下载**：\n\n        ```bash\n        ### 下载 tmux 及其依赖软件\n        wget -c https://github.com/tmux/tmux/releases/download/3.0a/tmux-3.0a.tar.gz\n        wget -c https://github.com/libevent/libevent/releases/download/release-2.1.11-stable/libevent-2.1.11-stable.tar.gz\n        wget -c https://ftp.gnu.org/gnu/ncurses/ncurses-6.2.tar.gz\n        ```\n\n    * **解压**\n\n        ```bash\n        tar -xzvf tmux-3.0a.tar.gz\n        tar -xzvf libevent-2.1.11-stable.tar.gz\n        tar -xzvf ncurses-6.2.tar.gz\n        ```\n\n    * **分别源码安装，先安装两个依赖包**\n\n        * libevent 会安在 /tmux_depend / lib\n\n            ```bash\n            cd  libevent-2.1.11-stable\n            #$HOME/tmux_depend是我的安装路径，大家可以修改\n            ./configure --prefix=/path/Tmux/tmux_depend --disable-shared\n            make && make install\n            ```\n\n        * ncurses 会安在 /tmux_depend / include\n\n            ```bash\n            cd  ncurses-6.2\n            ./configure --prefix=/path/Tmux/tmux_depend --disable-shared\n            make && make install\n            ```\n\n    * **安装 tmux**\n\n        ```bash\n        cd  tmux-3.3a\n        ./configure CFLAGS=\"-I/path/Tmux/tmux_depend/include -I/path/Tmux/tmux_depend/include/ncurses\" LDFLAGS=\"-L/path/Tmux/tmux_depend/lib -L/path/Tmux/tmux_depend/include/ncurses -L/path/Tmux/tmux_depend/include\"\n        make\n        cp tmux  /path/Tmux/tmux_depend/bin\n        ```\n\n## 设置环境变量\n\n```bash\nexport PATH=$HOME/tmux_depend/bin:$PATH\nsource ~/.bashrc\n```\n\n## tmux 常用命令\n\n```bash\n### 新建会话，比如新创建一个会话以\"ccc\"命名 tmn\ntmux new -s ccc\n加上参数-d，表示在后台新建会话\ntmux new -s shibo -d\n\n###　查看创建得所有会话 tml\ntmux ls\n\n### 登录一个已知会话,即从终端环境进入会话,第一个参数a也可以写成attach。后面的aaa是会话名称。tma\ntmux a -t aaa \n\n### 退出会话不是关闭：\n登到某一个会话后，先按键ctrl+b启动快捷键，再按d，这样就会退出该会话，但不会关闭会话。\n如果直接ctrl + d，就会在退出会话的通话也关闭了该会话！\n \n### 关闭会话（销毁会话） tmk\ntmux kill-session -t bbb\n\n### 重命名会话\ntmux rename -t wangshibo kevin\n```\n","tags":["tool","linux"],"categories":["tool","linux"]},{"title":"jupyter安装教程","url":"/post/66d9cc71.html","content":"\n### **安装jupyter。如果已经安装好，可忽略此步。**\n\n```\nconda create -n jupyter -y\nconda activate jupyter\nmamba install jupyter -y\n\n```\n\n### **集群终端运行以下命令，生成默认的配置文件，文件在/home/username/.jupyter目录下**\n\n```\njupyter notebook --generate-config\n\n```\n\n### **打开python IDE，并运行以下代码，用于设置jupyter访问密码。记录生成的密钥。**\n\n```\nfrom notebook.auth import passwd\npasswd()\n\n```\n\n### **修改配置文件/home/username/.jupyter/jupyter_notebook_config.py**\n\n```\nc.NotebookApp.allow_remote_access = True\nc.NotebookApp.ip = '0.0.0.0'\nc.NotebookApp.notebook_dir='/path/jupyter ' # 这里的路径是指在浏览器上进入的路径即是jupyter在服务器上的工作路径，在该路径中自己拥有读写权限。\nc.NotebookApp.open_browser = False\nc.NotebookApp.password='argon2:$argon2id$v=19$m=10240,t=10,p=8$fr1n0n9bTPZZHyriNaVecQ$hIzmU2S5SeJuoPUq7MLCag '  # 这个对应的是jupyter访问密码12345678的密码串，需要写入配置文件\nc.NotebookApp.port = 8110 # 可自行指定一个端口，表示jupyter运行的输入输出流都导向此端口。\n\n```\n\n### **在集群登陆节点和测试节点之间进行桥连接。在登陆节点输入如下命令。**\n\n```\nssh -NfL localhost:8135:localhost:8110 yournames@测试节点名称 #修改为自己的用户名和主机名\n-N 告诉SSH没有命令要被远程执行；\n-f   告诉SSH在后台执行；\n-L  是指定port forwarding的配置，远端的端口是第二个localhost后面接的port 8110，本地的端口是第一个localhost后面接的port 8135；\n\n```\n\n### **进入测试节点启动jupyter notebook 并保证该命令不会中断**\n\n```\njupyter notebook\n```\n\n### **在本地启动SSH。如果是windows，则先启动cmd**\n\n```\nssh -L 8190:localhost:8135 yournames@登陆节点ip\n192.168.61.1表示测试节点的ip\n8135表示登录节点用于侦听测试节点所用的端口。\n8190表示本地用于侦听登陆节点所用的端口。\n\nssh -L 8190:localhost:8135 yournames@登陆节点ip\n```\n\n### **最后打开浏览器，访问http://localhost:8190/, 之后输入密码（即是指第三步中配置文件中的密码串对应的密码12345678）即可登录。**\n","tags":["tool","linux"],"categories":["tool","linux"]},{"title":"code-server安装教程","url":"/post/4c46dc20.html","content":"\n## 下载\n\n\n* 官方的项目`Github`地址在这 [coder/code-server](https://github.com/coder/code-server)\n\n* 在`Releases`=>`Assets`里面找`linux-amd`包 ，可以本地下载再上传到服务器端\n\n* 在`Linux`终端输入命令下载\n\n    ```bash\n    wget https://github.com/coder/code-server/releases/download/v4.5.1/code-server-4.5.1-linux-amd64.tar.gz\n    ```\n\n## 安装\n\n```bash\n# 在终端安装，解压就行\ntar -xzvf code-server-4.5.1-linux-amd64.tar.gz\n```\n\n## 启动\n\n```bash\ncd bin\n./code-server\n```\n\n就会出现如下界面启动了\n\n```txt\n[2022-03-07T11:13:55.467Z] info  code-server 4.1.0 9e620e90f53fb91338a2ba1aaa2e556d42ae52d5\n[2022-03-07T11:13:55.468Z] info  Using user-data-dir ~/.local/share/code-server\n[2022-03-07T11:13:55.479Z] info  Using config file ~/.config/code-server/config.yaml\n[2022-03-07T11:13:55.479Z] info  HTTP server listening on http://127.0.0.1:888/ \n[2022-03-07T11:13:55.479Z] info    - Authentication is enabled\n[2022-03-07T11:13:55.479Z] info      - Using password from ~/.config/code-server/config.yaml\n[2022-03-07T11:13:55.479Z] info    - Not serving HTTPS\n```\n\n可以看到配置文件在`~/.config/code-server/config.yaml`这里  \n\n## 配置\n\n修改配置文件\n\n```bash\nvi ~/.config/code-server/config.yaml\n\n### config.yaml内容可以修改成如下(端口和密码需要自己改成其它)\nbind-addr: 0.0.0.0:8446\nauth: password\npassword: 12345678\ncert: false\n```\n\n## 穿透\n\n```bash\n### 端口可以随意修改\n### 在登陆节点执行下述命令\nssh -NfL localhost:8447:localhost:8446 yourname@测试节点名称\n### 在本地cmd中执行下述命令\nssh -L 8448:localhost:8447 yourname@登陆节点ip\n### 最后在浏览器打开对应网址\nhttp://localhost:8448/\n```\n\n## 运行\n\n如需持续运行，可以再安装[tmux](tmux.md)程序\n\n```bash\ntmux new -s vscode\n./code-server\n# 使用快捷键Ctrl+b, 再按d退出即可\n```\n","tags":["tool","linux"],"categories":["tool","linux"]},{"title":"简书笔记汇总","url":"/post/b3b948e8.html","content":"\n简书作者：[生信start_site](https://www.jianshu.com/u/d3b898b259fa)\n\n## Linux 学习笔记\n\n* [《Linux 命令行与 shell 脚本编程大全》第 11 章笔记（上）](https://www.jianshu.com/p/192946dce252) \n* [《Linux 命令行与 shell 脚本编程大全》第 11 章笔记（下）](https://www.jianshu.com/p/4d1a77d3b236) \n* [结构化命令 之 if-then； if-then-else 语句](https://www.jianshu.com/p/f6edec3d8b36) \n* [结构化命令 之 test 命令 (长文慎入）](https://www.jianshu.com/p/6557b3b6ca4f) \n* [结构化命令 之 复合条件测试](https://www.jianshu.com/p/c183fdbb08ca) \n* [结构化命令 之 if-then 高级特性](https://www.jianshu.com/p/d1b0911def71) \n* [结构化命令 之 case 命令](https://www.jianshu.com/p/ee6b85e04932) \n* [结构化命令 之 for 命令](https://www.jianshu.com/p/f679a812fa0d) \n\n<!--more-->\n\n* [结构化命令 之 while 命令](https://www.jianshu.com/p/6c9ec8ae4869) \n* [结构化命令 之 until 命令](https://www.jianshu.com/p/9cc269d62a06) \n* [结构化命令 之 嵌套循环](https://www.jianshu.com/p/9c415e7f1d19) \n* [控制循环](https://www.jianshu.com/p/93bd151f83e2) \n* [处理循环的输出](https://www.jianshu.com/p/59317149d162) \n* [shell 脚本编程 -- 处理用户输入](https://www.jianshu.com/p/d630d5556543) \n* [如何使用服务器下载和处理文件 / 以及传输文件至本地文件夹](https://www.jianshu.com/p/80cef33ed41c) \n* [利用 TrimGalore 去除 adapter 以及过滤 fastq 文件](https://www.jianshu.com/p/aca43442e931) \n* [更改 Putty 主题背景](https://www.jianshu.com/p/a7620c2ea275) \n* [如何根据染色体坐标批量提取对应的 DNA 序列（bedtools）](https://www.jianshu.com/p/3e6deaf83da9) \n* [计算 bam 文件中比对上基因组的 reads 以及合并多个 bam 文件](https://www.jianshu.com/p/05cbc7bd06bc) \n* [file 命令，find 命令](https://www.jianshu.com/p/0360ac5f37ca) \n* [怎么在 linux 里访问 U 盘里的数据](https://www.jianshu.com/p/19429118636a) \n* [输入 / 输出 / 重定向](https://www.jianshu.com/p/299c0da5f341)\n\n## R 学习笔记\n\n* [如何在散点图里添加特定标签](https://www.jianshu.com/p/4adb658a60ee) \n* [如何修改操作系统分配给 R 的内存上限](https://www.jianshu.com/p/fc2382c436f1) \n* [用 R 画 Circular barplot 图（环状柱形图）](https://www.jianshu.com/p/631381890ad4) \n* [用 R 画弧形图（Arc Diagram）](https://www.jianshu.com/p/0b13f75d9a9d) \n* [GENIE3——一款预测基因调控网络的 R 包](https://www.jianshu.com/p/d71dcd4cff5a) \n* [RNA-seq 的差异基因除了热图 / 火山图，你还可以如何展示？](https://www.jianshu.com/p/c90238849858) \n* [RCircos 包的使用](https://www.jianshu.com/p/799ef8f2bfcb) \n* [洛克菲勒大学 2021 年生信课 1：Introduction to R, session 1](https://www.jianshu.com/p/c2b91bc4a033) \n* [洛克菲勒大学 2021 年生信课 2：Introduction to R, session 2](https://www.jianshu.com/p/458f59261246)\n\n## python 学习笔记\n\n* [学习 Python: 最开始的开始（入门教程 + 软件安装）](https://www.jianshu.com/p/78809acafb36) \n* [Biopython 学习笔记（一）](https://www.jianshu.com/p/7d1fe73e4d66) \n* [Biopython 学习笔记（二）序列的分析](https://www.jianshu.com/p/a804bd33b4f7) \n* [Biopython 学习笔记（三）Blast](https://www.jianshu.com/p/04d846da001b) \n* [Biopython 学习笔记（四）访问 NCBI Entrez 数据库](https://www.jianshu.com/p/30bff68b1dda) \n* [利用 scanpy 进行单细胞测序分析（一）预处理和聚类](https://www.jianshu.com/p/2855145686a6) \n* [利用 scanpy 进行单细胞测序分析（二）轨迹推断](https://www.jianshu.com/p/58cb6419de09) \n* [利用 scanpy 进行单细胞测序分析（三）Marker 基因的可视化](https://www.jianshu.com/p/e29365002cb0) \n* [ipython 的初步了解](https://www.jianshu.com/p/fbb9f2520a59) \n* [Numpy 笔记（NumPy ndarray）](https://www.jianshu.com/p/a85c9ff81ebc) \n* [Numpy 笔记（Transposing Arrays）](https://www.jianshu.com/p/ac562796aebd) \n* [Numpy 笔记 (File Input and Output with Arrays)](https://www.jianshu.com/p/a4f3b0da44f1) \n* [pandas 笔记（pandas Data Structures）](https://www.jianshu.com/p/5c779efd288b) \n* [pandas 笔记（Essential Functionality）](https://www.jianshu.com/p/8b727bba5ecf) \n* [pandas 笔记（Summarizing and Computing Descriptive Statistics）](https://www.jianshu.com/p/f9f35b3e2584) \n* [pandas 笔记（Handling Missing Data）](https://www.jianshu.com/p/c373f5b38249) \n* [pandas 笔记 (Data Transformation)](https://www.jianshu.com/p/f16e162cf7ee) \n* [python 可视化：matplotlib 学习笔记](https://www.jianshu.com/p/9a7f62a30a68) \n* [python 可视化：Plotting with pandas and seaborn](https://www.jianshu.com/p/3fde65074a9d) \n* [python 笔记：Functions](https://www.jianshu.com/p/ec120b0e42d5) \n* [python 笔记：将 function 储存在 module 里](https://www.jianshu.com/p/fee26614135b) \n* [python 笔记：Class（类）](https://www.jianshu.com/p/b6f8c44caed7) \n* [python 笔记：打开 / 访问文件](https://www.jianshu.com/p/1c25a07fb114)\n\n## perl 学习笔记\n\n* [Learning Perl 学习笔记（1）第二章 Scalar Data](https://www.jianshu.com/p/e7e9006d3a82) \n* [Learning Perl 学习笔记（2）第三章 Lists and Arrays](https://www.jianshu.com/p/448ac3434104) \n* [Learning Perl 学习笔记（3）第四章：子程序](https://www.jianshu.com/p/ecd8e26d4a96) \n* [Learning Perl 学习笔记（4）第五章 Input and Output](https://www.jianshu.com/p/5bf7ecb14361) \n* [Learning Perl 学习笔记（5）第六章 Hashes](https://www.jianshu.com/p/9ca226b57ed5) \n* [Learning Perl 学习笔记（6）第七章 正则表达式](https://www.jianshu.com/p/ac8092758ac2) \n* [Learning Perl 学习笔记（7）第八章 使用正则表达式进行 matching](https://www.jianshu.com/p/d4638b79ddea) \n* [Learning Perl 学习笔记（8）第九章 Processing Text with Regular Expressions](https://www.jianshu.com/p/cf0db9d9c671) \n* [Learning Perl 学习笔记（9）：Strings and Sorting](https://www.jianshu.com/p/f6e31c0b0ab7) \n* [circos 软件使用初探](https://www.jianshu.com/p/372d83b89229) \n* [circos 软件学习笔记：语法、颜色、字体和文件格式](https://www.jianshu.com/p/f1a206893744) \n* [circos 软件学习笔记：添加刻度](https://www.jianshu.com/p/4c8fc9d8fe78) \n* [circos 软件学习笔记：更改染色体的比例、颜色、方向](https://www.jianshu.com/p/9a57e583d7c5) \n* [circos 软件学习笔记：在圆圈里添加 lines（interaction）](https://www.jianshu.com/p/dba889089dee)\n\n## 转录组学习笔记\n\n* [RNA-seq 练习 第一部分（原始数据下载，提取 fastq 文件，fastqc 质控）](https://www.jianshu.com/p/055732b6ac99) \n* [RNA-seq 练习 第二部分（基因组序列下载，注释文件下载，索引下载，比对，比对质控, HTseq-count 计数，输出 count 矩阵文件）](https://www.jianshu.com/p/849f8ada0ab7) \n* [RNA-seq 练习 第三部分（DEseq2 筛选差异表达基因, 可视化）](https://www.jianshu.com/p/82787ddada38) \n* [理解 SAM 文件格式以及过滤 sam 文件](https://www.jianshu.com/p/7d15173540ae) \n* [GSEA 学习笔记](https://www.jianshu.com/p/aae9b0322b83) \n* [几种标准化方法的学习笔记](https://www.jianshu.com/p/c2605b5b8c0a) \n* [比对软件 STAR 的使用](https://www.jianshu.com/p/5b6dfc954315)\n\n## ChIP-seq & ATAC-seq 笔记\n\n* [ChIP-seq 实践 (H3K27Ac,enhancer 的筛选和 enhancer 相关基因的 GO 分析)](https://www.jianshu.com/p/05aae63d7c52) \n* [ChIP-seq 实践（非转录因子，非组蛋白）](https://www.jianshu.com/p/2138c99ce30a) \n* [在 IGV 里同时查看多个 region/gene](https://www.jianshu.com/p/cc01ad9db959) \n* [ATAC-seq 分析练习](https://www.jianshu.com/p/57d4420056dd) \n* [结合 CHIP-seq 和 ATAC-seq 结果进行分析](https://www.jianshu.com/p/1e3d15c325e9) \n* [GREAT 网页版学习笔记（预测顺式调控元件）](https://www.jianshu.com/p/7f6ce4f238cb) \n* [使用 HINT-ATAC 进行 ATAC-Seq 的 footprinting 分析](https://www.jianshu.com/p/6aba8f1dea56) \n* [用 MEME-CHIP 预测转录因子的结合](https://www.jianshu.com/p/66deb4c008f5)  \n* [利用 HOMER 预测目标序列的 motif（从运行程序到结果解读，以及注意事项）](https://www.jianshu.com/p/467d970ec097) \n* [Motif scanning tool: FIMO（在线版分析笔记）](https://www.jianshu.com/p/37eadb126bbf) \n* [如何提取 ATAC-seq 数据的差异 peaks?（DiffBind 包的使用）](https://www.jianshu.com/p/b74c8077d893) \n* [shadow enhancers](https://www.jianshu.com/p/0f674e88c1ce)\n\n## CUT&Tag 学习笔记\n\n* [CUT&Tag 数据分析笔记（1）](https://www.jianshu.com/p/1a23656a0713) \n* [CUT&Tag 数据分析笔记（2）](https://www.jianshu.com/p/7d45ec853ff8) \n* [CUT&Tag 数据分析笔记（3）](https://www.jianshu.com/p/47f30acd68f1)\n\n## Hi-C 学习笔记\n\n* [Hi-C 技术的初步了解](https://www.jianshu.com/p/e3c198d75345) \n* [Hi-C 分析练习（从 fastq 文件到 contact 矩阵）](https://www.jianshu.com/p/e7757fa94624) \n* [Hi-C 分析练习（从 cool 文件到可视化热图）](https://www.jianshu.com/p/495c576f0f0f)\n\n## 甲基化测序分析学习笔记\n\n* [陈巍学基因视频学习记录 -- 甲基化测序](https://www.jianshu.com/p/316faa7e0642) \n* [Bismark Bisulfite Mapper 学习笔记（一）数据预处理](https://www.jianshu.com/p/4c64858003c1) \n* [Bismark Bisulfite Mapper 学习笔记（二）甲基化信息提取以及文件解读](https://www.jianshu.com/p/e71184d03ace) \n* [WGBS vs RRBS](https://www.jianshu.com/p/f8a02e164f5a)\n\n## 单细胞转录组学习笔记\n\n* [单细胞 RNA-seq 入门文献学习](https://www.jianshu.com/p/b79171dddb0d) \n* [单细胞测序实战（第一部分）](https://www.jianshu.com/p/a70c831c95f5) \n* [单细胞测序实战（第二部分）](https://www.jianshu.com/p/b7fec167f4eb)\n* [单细胞测序实战（第三部分）](https://www.jianshu.com/p/c206818ad0c6) \n* [(Smartseq2) single cell RNA-seq 分析练习](https://www.jianshu.com/p/dee97289586c) \n* [10× 单细胞测序分析练习（一）](https://www.jianshu.com/p/705a348e8623) \n* [10× 单细胞测序分析练习（二）](https://www.jianshu.com/p/62db41020ad2) \n* [单细胞测序分析之 Monocle2 包学习笔记](https://www.jianshu.com/p/f6186755aae5) \n* [单细胞测序分析之 Seurat（3.0）包学习笔记](https://www.jianshu.com/p/26d3648b2e1f) \n* [单细胞测序分析之 scater 包学习笔记](https://www.jianshu.com/p/4c20a7866ce6) \n* [Single cell RNA-seq data analysis with R 视频学习笔记（一）](https://www.jianshu.com/p/ff637a0b7ff5) \n* [Single cell RNA-seq data analysis with R 视频学习笔记（二）](https://www.jianshu.com/p/e64b7b92f9e2) \n* [Single cell RNA-seq data analysis with R 视频学习笔记（三）](https://www.jianshu.com/p/0e13ecde84b6) \n* [Single cell RNA-seq data analysis with R 视频学习笔记（四、五）](https://www.jianshu.com/p/ca1a955f5046) \n* [单细胞测序数据整合练习（详细代码）](https://www.jianshu.com/p/3b9a0204d65b) \n* [Single cell RNA-seq data analysis with R 视频学习笔记（六）](https://www.jianshu.com/p/7af86cc04e7d) \n* [Single cell RNA-seq data analysis with R 视频学习笔记（七）](https://www.jianshu.com/p/f20cfd1fa326) \n* [Single cell RNA-seq data analysis with R 视频学习笔记（八）](https://www.jianshu.com/p/adb692e71bf9) \n* [Single cell RNA-seq data analysis with R 视频学习笔记（九：空间转录组）](https://www.jianshu.com/p/88372e79a863) \n* [单细胞轨迹推断（Trajectory inference）分析（详细代码）](https://www.jianshu.com/p/16ebecb3b5fa) \n* [RNA velocity of single cells 文献学习](https://www.jianshu.com/p/f6f48d6594ce) \n* [RNA velocity 分析练习（一）文件下载以及预处理](https://www.jianshu.com/p/e65964f39eb3) \n* [RNA velocity 分析练习（二）软件安装](https://www.jianshu.com/p/df6c16cc2bc2) \n* [RNA velocity 分析练习（三）生成 loom 文件](https://www.jianshu.com/p/bce19672879e) \n* [RNA velocity 分析练习（四）聚类以及 velocity 可视化](https://www.jianshu.com/p/d6c92dd67166) \n* [cellranger 使用的初步探索（1）](https://www.jianshu.com/p/08f75901cc3e) \n* [cellranger 使用的初步探索（2）理解 cellranger count 输出文件](https://www.jianshu.com/p/57bda7d71b18) \n* [cellranger 使用的初步探索（3）cellranger aggr](https://www.jianshu.com/p/ca726a8979d7) \n* [cellranger 使用的初步探索（4）：R 读取 cellranger 的输出文件](https://www.jianshu.com/p/0fbf5b29f2ae)\n\n## 单细胞 ATAC-seq 学习笔记\n\n* [Single-Cell ATAC-Seq 的初步了解](https://www.jianshu.com/p/7d8058efb8e5) \n* [scATAC-seq 数据分析练习（成年小鼠大脑组织）](https://www.jianshu.com/p/ef7531c7d07d) \n* [[scATAC-seq] 利用 Monocle3 构建细胞 “轨迹”](https://www.jianshu.com/p/17a0a1cafade) \n* [ArchR 官网教程学习笔记 1：Getting Started with ArchR](https://www.jianshu.com/p/a2bcdfb77961) \n* [ArchR 官网教程学习笔记 2: 基于 ArchR 推测 Doublet](https://www.jianshu.com/p/5ec81b5bb3ea) \n* [ArchR 官网教程学习笔记 3: 创建 ArchRProject](https://www.jianshu.com/p/9243973a35e6) \n* [ArchR 官网教程学习笔记 4:ArchR 的降维](https://www.jianshu.com/p/98d702592720) \n* [ArchR 官网教程学习笔记 5:ArchR 的聚类](https://www.jianshu.com/p/91007564ffdc) \n* [ArchR 官网教程学习笔记 6: 单细胞嵌入（Single-cell Embeddings）](https://www.jianshu.com/p/16904f84b8ba) \n* [ArchR 官网教程学习笔记 7:ArchR 的基因评分和 Marker 基因](https://www.jianshu.com/p/45d1d47fdcd3) \n* [ArchR 官网教程学习笔记 8: 定义与 scRNA-seq 一致的聚类](https://www.jianshu.com/p/60ce90ba67a9) \n* [ArchR 官网教程学习笔记 9:ArchR 的伪批量重复](https://www.jianshu.com/p/9aae0389875d) \n* [ArchR 官网教程学习笔记 10:ArchR 的 call peak](https://www.jianshu.com/p/30fb540e95ec) \n* [ArchR 官网教程学习笔记 11: 鉴定 Marker 峰](https://www.jianshu.com/p/79fa167c914d) \n* [ArchR 官网教程学习笔记 12:Motif 和 Feature 富集](https://www.jianshu.com/p/662c626123b5) \n* [ArchR 官网教程学习笔记 13:ChromVAR 偏差富集](https://www.jianshu.com/p/8bd8da9a9ba8) \n* [ArchR 官网教程学习笔记 14:ArchR 的 Footprinting 分析](https://www.jianshu.com/p/40946d10c63c) \n* [ArchR 官网教程学习笔记 15:ArchR 的整合分析](https://www.jianshu.com/p/b3f538f86feb) \n* [ArchR 官网教程学习笔记 16（上）:ArchR 的轨迹推断分析](https://www.jianshu.com/p/519b1a69e1d6) \n* [ArchR 官网教程学习笔记 16（下）:ArchR 的轨迹推断分析](https://www.jianshu.com/p/9de6526e45a2)\n\n## TCGA 数据库学习笔记\n\n* [TCGA 数据库的初次了解](https://www.jianshu.com/p/d662069a4a3d) \n* [如何批量下载 TCGA 里的数据（gdc-client 方法）](https://www.jianshu.com/p/43a915fc8ee9) \n* [利用 R 包 TCGAbiolinks 进行各种数据下载](https://www.jianshu.com/p/3b4c07f7e5f3) \n* [TCGA 的差异基因分析](https://www.jianshu.com/p/e18068180ee5) \n* [整合 gdc-client 批量下载的文件](https://www.jianshu.com/p/72b0fa510086) \n* [如何把从 TCGA 下载的 HTseq count 转换成 FPKM](https://www.jianshu.com/p/4afbdc8fd8ed) \n* [如何生成 WGCNA 分析所需的临床表型信息](https://www.jianshu.com/p/0ac52f582ea4) \n* [WGCNA 学习笔记](https://www.jianshu.com/p/0d05d1f007e7) \n* [TCGA 数据生存分析](https://www.jianshu.com/p/fd5e06ec260b) \n* [TCGA 甲基化数据下载以及相关临床信息整理](https://www.jianshu.com/p/1ceace2b581c) \n* [TCGA 甲基化数据质量控制和差异分析（使用 ChAMP 包）](https://www.jianshu.com/p/27269f95d9c1) \n* [如何将 WGCNA 导出的基因共表达网络进行可视化（cytoscape 软件的使用）](https://www.jianshu.com/p/d75e1199f8b1) \n* [TCGA 数据库 MAF 文件的分析以及可视化（maftools 包的使用）](https://www.jianshu.com/p/967d52171777) \n* [TCGA 数据库 copy number variation 数据分析（第一部分：从数据下载到 GISTIC 输出文件）](https://www.jianshu.com/p/b8351a86a40b) \n* [TCGA 数据库 copy number variation 数据分析（第二部分：利用 maftools 进行可视化）](https://www.jianshu.com/p/dbc90a1475c1)\n\n## GEO 数据库学习笔记\n\n* [GEO 数据库视频学习笔记（芯片数据下载和数据读取）](https://www.jianshu.com/p/51711c22934d) \n* [GEO 数据库视频学习笔记（ID 转换）](https://www.jianshu.com/p/d64a1ddf1128) \n* [GEO 数据库视频学习笔记（了解你的表达矩阵）](https://www.jianshu.com/p/c94875df0155) \n* [GEO 数据库视频学习笔记（差异分析、可视化、GSEA）](https://www.jianshu.com/p/4486c6624ef9)\n\n## cBioPortal 数据库学习笔记\n\n* [cBioPortal 学习笔记（1）](https://www.jianshu.com/p/b458796366a4) \n* [cBioPortal 学习笔记（2）](https://www.jianshu.com/p/cf0d1f407601)\n\n## WGS 学习笔记\n\n* [GATK 的初次了解](https://www.jianshu.com/p/4177a7afc798) \n* [GATK 官网学习笔记 Data pre-processing for variant discovery](https://www.jianshu.com/p/9fce93c1a337) \n* [Broad Institute 视频笔记 Introduction to High-throughput Sequencing Data](https://www.jianshu.com/p/b93f8f4a1ed7) \n* [Broad Institute 视频笔记 Introduction to Data Preprocessing](https://www.jianshu.com/p/8ace60832c13) \n* [Broad Institute 视频笔记 Introduction to Variant Discovery](https://www.jianshu.com/p/5bf73e5a3390) \n* [Broad Institute 视频笔记 Introduction to Germline Variant Discovery](https://www.jianshu.com/p/c032b7a1909c) \n* [Broad Institute 视频笔记 Introduction to Somatic Variant Discovery](https://www.jianshu.com/p/6e0b483f1234) \n* [Broad Institue 视频笔记：Variant Calling with HaplotypeCaller](https://www.jianshu.com/p/9c049c46a26d) \n* [Broad Institute 视频笔记 Hello World WDL Tutorial](https://www.jianshu.com/p/241595e0ed39) \n* [Broad Institute 视频笔记 Run Haplotypecaller（WDL+Cromwell）](https://www.jianshu.com/p/2c4a792b49fe)\n\n## 文献阅读笔记\n\n* [增强子和启动子真的是两种完全不同的调控元件吗？【Nature Reviews Genetics】文献阅读](https://www.jianshu.com/p/7cee57558c32) \n* [TT-seq 文献阅读 (TT-seq maps the human transient transcriptome)](https://www.jianshu.com/p/e21ba67460ac) \n* [eRNA 文献阅读](https://www.jianshu.com/p/61d95dd791b2) \n* [PRO-seq 文献阅读](https://www.jianshu.com/p/35d2f771669b) \n* [增强子 (enhancer) 靶向表观基因组编辑技术 enCRISPRa 和 enCRISPRi 文献学习](https://www.jianshu.com/p/f41632859d39) \n* [CROP-seq 文献学习（CRISPR 液滴测序）](https://www.jianshu.com/p/9dd472bcd5e0) \n* [SMRT 测序文献阅读笔记](https://www.jianshu.com/p/6eaca6ab8f8e) \n* [文献阅读笔记：CUT&RUN](https://www.jianshu.com/p/5a1c31ee6c51) \n* [文献阅读笔记：CUT&Tag](https://www.jianshu.com/p/335aec753039) \n* [文献阅读 Orchestrating single-cell analysis with Bioconductor](https://www.jianshu.com/p/d5b91b271fdf) \n* [文献阅读：细胞异质性的表观遗传学基础](https://www.jianshu.com/p/de867ea346ca) \n* [【文献笔记】DNA，RNA 以及组蛋白的甲基化在衰老和肿瘤中的作用](https://www.jianshu.com/p/4fe83e6e67ad)\n\n## StatQuest 视频学习笔记\n\n* [StatQuest——生物信息相关原理的入门系列 (一)](https://www.jianshu.com/p/0f8fa0b8f86d) \n* [StatQuest——生物信息相关原理的入门系列 (二)](https://www.jianshu.com/p/69b18da08a46) \n* [StatQuest（PCA 系列）step by step 为你解释 PCA 的那些事儿](https://www.jianshu.com/p/dffd1c8f99b0) \n* [StatQuest——t-SNE 视频笔记](https://www.jianshu.com/p/a2b3c68416c5) \n* [StatQuest——Hierarchical Clustering 学习笔记](https://www.jianshu.com/p/46f0aef6b5c3) \n* [StatQuest——K-means 到底是什么？](https://www.jianshu.com/p/609226bdb66f) \n* [StatQuest - 你想很轻松的理解 Covariance 和 Correlation 吗?(Part 1)](https://www.jianshu.com/p/7b797da06ed4) \n* [StatQuest - 你想很轻松的理解 Covariance 和 Correlation 吗?(Part 2)](https://www.jianshu.com/p/85023ee0a164)\n\n## Epigenetics 笔记\n\n* [Epigenetics 笔记一：Writers, Readers, Erasers](https://www.jianshu.com/p/96c8eb5561fe) \n* [Epigenetics 文献学习：Regulation of chromatin by histone modifications](https://www.jianshu.com/p/1193ab2f463c) \n* [Epigenetics 文献学习：染色质结构域](https://www.jianshu.com/p/b9869113bd10) \n* [Epigenetics 文献阅读：The molecular hallmarks of epigenetic control](https://www.jianshu.com/p/c9725c44e659) \n* [Epigenetics 文献学习：Writing, erasing and reading histone lysine methylation](https://www.jianshu.com/p/aa77686648c0) \n* [Epigenetics 文献学习：Histone H3 突变的致癌机制](https://www.jianshu.com/p/b73c50e1dbe0)\n* [Epigenetics 文献学习：组蛋白标记在控制转录周期中的功能作用](https://www.jianshu.com/p/b9d061fa238f) \n* [SWI/SNF 复合体在肿瘤里的作用](https://www.jianshu.com/p/80b321e03d11) \n* [新英格兰医学：癌症的表观遗传治疗](https://www.jianshu.com/p/1a0dd75d7a00) \n* [NATURE: 组蛋白标记 H3K36me2 招募 DNMT3A 并调节基因间 DNA 甲基化分布](https://www.jianshu.com/p/8d554f3cf96f) \n* [NATURE: 基因 - 环境协同诱导的表观遗传程序起始肿瘤发生](https://www.jianshu.com/p/a7b75ab3472e) \n* [NATURE: 组蛋白甲基转移酶 NSD3 异常活化可诱导肺鳞状细胞癌的发生](https://www.jianshu.com/p/6a7e68be2de7) \n* [NATURE: 组蛋白变体在调节染色质组织和功能中的作用](https://www.jianshu.com/p/cd4a0b857d6f) \n* [Nature Reviews Cancer: 实体瘤 \"劫持\" 组蛋白变体互作网络](https://www.jianshu.com/p/e152c798e047) \n* [Nature Reviews Genetics：3D 基因组组织工程](https://www.jianshu.com/p/b20db6b067e1) \n* [NCB: 核纤层的功能机制与异常](https://www.jianshu.com/p/2cd3158ae9ee) \n* [CUT&RUN 实验原理和步骤](https://www.jianshu.com/p/3927a7ba6176) \n* [【Nature Review Cancer】癌症中染色质修饰的 “language”](https://www.jianshu.com/p/f2f39a327ec9)\n\n","tags":["note","bioinformatics"],"categories":["code","inbox"]}]